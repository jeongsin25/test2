{"version":3,"sources":["assets/Script/ballCollider.ts","assets/Script/gamemanager.ts"],"names":["gamemanager_1","require","_a","cc","_decorator","ccclass","NewClass","property","_super","_this","apply","this","arguments","gamemanager","active","drop","mergeDelayCheck","__extends","NewClass_1","prototype","onLoad","Collider_manager","director","getCollisionManager","enabled","enabledDrawBoundingBox","onCollisionEnter","other","self","node","name","canvasNode","parent","gameScreen","getChildByName","nextBall","getComponent","default","copyBall","scaleUpAction","scaleTo","easing","easeQuadraticActionOut","callback","callFunc","random","Math","floor","skin","children","Sprite","spriteFrame","mergeImage","mergeImage2","setContentSize","scaleUpAction2","runAction","touchcheck","sequence","isfail","screenSize","view","getVisibleSize","spriteNumber","parseInt","newPrefab","instantiate","mergePrefab","mergePrefab2","prefabPos","Vec2","position","x","y","setPosition","gameBox","scale","width","destroy","addChild","RigidBody","type","RigidBodyType","Dynamic","screenScale","saveScale","success","mergeDelay","mergeEffect","soundsData","onCollisionStay","warningError","fadeWarning","warning","getPositionY","failed","scheduleOnce","start","update","dt","__decorate","Component","exports","ballCollider_1","effectsImage","effectsAnimation","sounds","lastTouchPosX","sizeChange","endBlackscreen","touchStop","shineMove","getPhysicsManager","startGame","onReadyCallback","screensize","setting","warningSetting","lineDraw","startScreen","on","Node","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","background","woodDown","table","woodUp","Graphics","fillColor","Color","fillRect","height","getContentSize","number","woodUpImage","removeChild","i","childNode","addComponent","ceil","setPositionX","j","mission","missionBall","boxCollider_top","boxCollider_bottom","boxCollider_left","boxCollider_right","boxCollider_warning","cloneNode","setPositionY","insertChild","physics_manager","gravity","v2","console","log","visibleSize","getScene","loadScene","setResizeCallback","event","opacity","convertToNodeSpaceAR","getLocation","line","startBall","getPositionX","Widget","left","onScale255","motionScale","graphics","lineWidth","strokeColor","color","startX","startY","endY","gapLength","dashLength","currentPosition","moveTo","lineTo","stroke","startPos","prefabWidth","effectScreen","newNode","fadeOutAction","fadeTo","setTag","Animation","animation","clip","defaultClip","addClip","radian","PI","moveX","cos","moveY","sin","move","easeQuadraticActionInOut","rotate","rotateTo","play","watermelonShine","shine","watermelonShineRotate","watermelonShineFadeInOut","shine_1","shine_2","shineRotate","rotate_1","rotateBy","shineRotate2","shineFade","fadeOut","fadeIn","shineFade2","numberW","numberH","k","rotation","box_2","selfNode","getSiblingIndex","warningLine","childrenCount","Static","stop","fail","finishScale","failFadeAction","easeQuadraticActionIn","failScaleAction","endGame","text","group","perfectText","fadeInAction","scaleDownAction","arrow","mouseCursor","tapToSwipe","copyball","startScreenBall","startLineDraw","mouseMovePosX","moveAction_1","moveBy","moveAction_2","moveLeftAction","moveRightAction","resetAction","resetAction2","currentPosition2","drawDashedLine","failOrSuccess","endScreen","logoEffect","buttonEffect","button","onButtonStart","onButtonEnd","sclae_1","sclae_2","onAdsFinished","logo","logoScale","curveData","props","value","code","newSoundEffectSrc","AudioSource","volume","scaleAction","oneLink","clickUrl","snow","plusX","plusY","snowMove","window","playableSDK","openAppStore","endScreenFillColor","getA","clear","setA","watermelonNode","SpriteFrame","Prefab","AnimationClip","AudioClip"],"mappings":"ykBAAA,IAAAA,EAAAC,EAAA,iBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNC,GAHMJ,EAAAK,SAGN,SAAAC,GADA,SAAAF,IAAA,IAAAG,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGIF,EAAAI,YAAA,KACAJ,EAAAK,QAAA,EACOL,EAAAM,MAAA,EACPN,EAAAO,iBAAA,IAyPJ,OA9PsCC,UAAAX,EAAAE,IAAjBU,EAAAZ,GASjBa,UAAAC,OAAA,WACI,IAAAC,EAAAlB,GAAAmB,SAAAC,sBACAF,EAAAG,SAAA,EAEAH,EAAAI,wBAAA,GAGGnB,EAAAa,UAAAO,iBAAA,SAAAC,EAAAC,GAEH,GAAA,qBAAAD,EAAAE,KAAAC,MACA,sBAAAH,EAAAE,KAAAC,KADA,CAMA,IAAAC,EAAAH,EAAAC,KAAAG,OAAAA,OACAC,EAAAF,EAAAG,eAAA,cAGAC,EAFAJ,EAAAG,eAAA,cACAA,eAAA,kBACAA,eAAA,YAGA,GAAAvB,KAAAI,MAAA,oBAAAY,EAAAE,KAAAC,MAAA,wBAAAH,EAAAE,KAAAC,KAAA,CACInB,KAAAI,MAAA,EAEAgB,EAAAK,aAAApC,EAAAqC,SAAAC,WAGA,IAsBAC,EAAApC,GAAAqC,QAAA,GAAA,GAAAC,OAAAtC,GAAAuC,0BAEAC,EAAAxC,GAAAyC,SAxBA,SAAAf,GAGI,IADA,IAAAgB,EAAAC,KAAAC,MAAA,EAAAD,KAAAD,UAGC,KADGA,EAAAC,KAAAC,MAAA,EAAAD,KAAAD,YACH,IAAAA,IAED,IAAAd,EAAAK,aAAApC,EAAAqC,SAAAW,KACIb,EAAAc,SAAA,GAAAb,aAAAjC,GAAA+C,QAAAC,YAAApB,EAAAK,aAAApC,EAAAqC,SAAAe,WAAAP,GACE,IAAAd,EAAAK,aAAApC,EAAAqC,SAAAW,OACFb,EAAAc,SAAA,GAAAb,aAAAjC,GAAA+C,QAAAC,YAAApB,EAAAK,aAAApC,EAAAqC,SAAAgB,YAAAR,IAEJV,EAAAc,SAAA,GAAAK,eAAA,IAAA,KAEA,IAAAC,EAAApD,GAAAqC,QAAA,GAAA,KAAAC,OAAAtC,GAAAuC,0BAEAb,EAAA2B,UAAAD,GAGAxB,EAAAK,aAAApC,EAAAqC,SAAAoB,WAAA,IAOJC,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAR,EAAAc,SAAA,GAAAO,UAAAE,GAIJ,GAAA9B,EAAAC,KAAAO,aAAAjC,GAAA+C,QAAAC,cAAAxB,EAAAE,KAAAO,aAAAjC,GAAA+C,QAAAC,aAAAxC,KAAAG,QAAAa,EAAAE,KAAAO,aAAAlB,GAAAJ,SAAAH,KAAAK,kBAAAW,EAAAE,KAAAO,aAAAlB,GAAAF,kBAAAe,EAAAK,aAAApC,EAAAqC,SAAAsB,OAAA,CAEI,IAAAC,EAAAzD,GAAA0D,KAAAC,iBAGAC,EAAAC,SAAArC,EAAAE,KAAAO,aAAAjC,GAAA+C,QAAAC,YAAArB,MACA,GAAA,IAAAC,EAAAK,aAAApC,EAAAqC,SAAAW,KACI,IAAAiB,EAAA9D,GAAA+D,YAAAnC,EAAAK,aAAApC,EAAAqC,SAAA8B,YAAAJ,EAAA,SACE,GAAA,IAAAhC,EAAAK,aAAApC,EAAAqC,SAAAW,KACFiB,EAAA9D,GAAA+D,YAAAnC,EAAAK,aAAApC,EAAAqC,SAAA+B,aAAAL,EAAA,IAIJ,IAAAM,EAAA,IAAAlE,GAAAmE,MAAA1C,EAAAC,KAAA0C,SAAAC,EAAA7C,EAAAE,KAAA0C,SAAAC,GAAA,GAAA5C,EAAAC,KAAA0C,SAAAE,EAAA9C,EAAAE,KAAA0C,SAAAE,GAAA,GACAR,EAAAS,YAAAL,GAEA,IAAAM,EAAA5C,EAAAG,eAAA,WACA+B,EAAAW,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAGAjD,EAAAC,KAAAiD,UACAnD,EAAAE,KAAAiD,UACAnE,KAAAG,QAAA,EACAa,EAAAE,KAAAO,aAAAlB,GAAAJ,QAAA,EAGAmB,EAAA8C,SAAAd,GACAA,EAAA7B,aAAAjC,GAAA6E,WAAAC,KAAA9E,GAAA+E,cAAAC,QAEA,IAAAR,EAAAC,QACIX,EAAAW,MAAA,IAAA7C,EAAAK,aAAApC,EAAAqC,SAAA+C,aAEJ,MAAAxB,EAAAiB,QACIZ,EAAAW,MAAA,KAGJ,IAAAS,EAAApB,EAAAW,MAOArC,EAAApC,GAAAqC,QAAA,GAAAyB,EAAAW,MAAAX,EAAAW,MAAA,IAAAnC,OAAAtC,GAAAuC,0BAEAC,EAAAxC,GAAAyC,SAPA,SAAAf,GACI,IAAA0B,EAAApD,GAAAqC,QAAA,GAAA6C,GAAA5C,OAAAtC,GAAAuC,0BACAb,EAAA2B,UAAAD,KAOJG,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAsB,EAAAT,UAAAE,GAEA,OAAAO,EAAA7B,aAAAjC,GAAA+C,QAAAC,YAAArB,MACIC,EAAAK,aAAApC,EAAAqC,SAAAiD,UAIJrB,EAAA7B,aAAAlB,GAAAqE,WAAAtB,GAGAlC,EAAAK,aAAApC,EAAAqC,SAAAmD,YAAAnB,EAAAJ,EAAAY,OAEA9C,EAAAK,aAAApC,EAAAqC,SAAAoD,WAAA,MAIRnF,EAAAa,UAAAuE,gBAAA,SAAA/D,EAAAC,GACI,IAAAgC,EAAAzD,GAAA0D,KAAAC,iBACA/B,EAAAH,EAAAC,KAAAG,OAAAA,OACA2C,EAAA5C,EAAAG,eAAA,WACAD,EAAAF,EAAAG,eAAA,cAGA,GAAA,qBAAAP,EAAAE,KAAAC,MACA,sBAAAH,EAAAE,KAAAC,MACAC,EAAAK,aAAApC,EAAAqC,SAAAsD,aAAA,GAEI5D,EAAAK,aAAApC,EAAAqC,SAAAsD,cAAA,MAJJ,CAQAhF,KAAAI,MAAA,wBAAAY,EAAAE,KAAAC,MAAAC,EAAAK,aAAApC,EAAAqC,SAAAuD,cACI7D,EAAAK,aAAApC,EAAAqC,SAAAuD,aAAA,EACA7D,EAAAK,aAAApC,EAAAqC,SAAAwD,QAAAjE,EAAAC,OAGJ+B,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACAjD,EAAAC,KAAAiE,eAAAlC,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAiBA,GAfA,IAAAF,EAAAC,QACI,IAAA7C,EAAAK,aAAApC,EAAAqC,SAAA+C,YACAxD,EAAAC,KAAAiE,eAAA/D,EAAAK,aAAApC,EAAAqC,SAAA+C,aAEJ,MAAAxB,EAAAiB,QACI,IACAjD,EAAAC,KAAAiE,gBAIJnF,KAAAI,MAAA,oBAAAY,EAAAE,KAAAC,MACIC,EAAAK,aAAApC,EAAAqC,SAAA0D,SAIJnE,EAAAC,KAAAO,aAAAjC,GAAA+C,QAAAC,cAAAxB,EAAAE,KAAAO,aAAAjC,GAAA+C,QAAAC,aAAAxC,KAAAG,QAAAa,EAAAE,KAAAO,aAAAlB,GAAAJ,SAAAH,KAAAK,kBAAAW,EAAAE,KAAAO,aAAAlB,GAAAF,kBAAAe,EAAAK,aAAApC,EAAAqC,SAAAsB,OAAA,CAEIC,EAAAzD,GAAA0D,KAAAC,iBAAA,IAGAC,EAAAC,SAAArC,EAAAE,KAAAO,aAAAjC,GAAA+C,QAAAC,YAAArB,MACA,GAAA,IAAAC,EAAAK,aAAApC,EAAAqC,SAAAW,KACI,IAAAiB,EAAA9D,GAAA+D,YAAAnC,EAAAK,aAAApC,EAAAqC,SAAA8B,YAAAJ,EAAA,SACE,GAAA,IAAAhC,EAAAK,aAAApC,EAAAqC,SAAAW,KACFiB,EAAA9D,GAAA+D,YAAAnC,EAAAK,aAAApC,EAAAqC,SAAA+B,aAAAL,EAAA,IAIJ,IAAAM,EAAA,IAAAlE,GAAAmE,MAAA1C,EAAAC,KAAA0C,SAAAC,EAAA7C,EAAAE,KAAA0C,SAAAC,GAAA,GAAA5C,EAAAC,KAAA0C,SAAAE,EAAA9C,EAAAE,KAAA0C,SAAAE,GAAA,GACAR,EAAAS,YAAAL,GAEAM,EAAA5C,EAAAG,eAAA,WACA+B,EAAAW,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAGAjD,EAAAC,KAAAiD,UACAnD,EAAAE,KAAAiD,UACAnE,KAAAG,QAAA,EACAa,EAAAE,KAAAO,aAAAlB,GAAAJ,QAAA,EAGAmB,EAAA8C,SAAAd,GACAA,EAAA7B,aAAAjC,GAAA6E,WAAAC,KAAA9E,GAAA+E,cAAAC,QAEA,IAAAR,EAAAC,QACIX,EAAAW,MAAA,IAAA7C,EAAAK,aAAApC,EAAAqC,SAAA+C,aAEJ,MAAAxB,EAAAiB,QACIZ,EAAAW,MAAA,KAGJ,IAAAS,EAAApB,EAAAW,MAOArC,EAAApC,GAAAqC,QAAA,GAAAyB,EAAAW,MAAAX,EAAAW,MAAA,IAAAnC,OAAAtC,GAAAuC,0BAEAC,EAAAxC,GAAAyC,SAPA,SAAAf,GACI,IAAA0B,EAAApD,GAAAqC,QAAA,GAAA6C,GAAA5C,OAAAtC,GAAAuC,0BACAb,EAAA2B,UAAAD,KAOJG,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAsB,EAAAT,UAAAE,GAEA,OAAAO,EAAA7B,aAAAjC,GAAA+C,QAAAC,YAAArB,MACIC,EAAAK,aAAApC,EAAAqC,SAAAiD,UAIJrB,EAAA7B,aAAAlB,GAAAqE,WAAAtB,GAGAlC,EAAAK,aAAApC,EAAAqC,SAAAmD,YAAAnB,EAAAJ,EAAAY,OAEA9C,EAAAK,aAAApC,EAAAqC,SAAAoD,WAAA,MAQRnF,EAAAa,UAAAoE,WAAA,SAAAtB,GAEIA,EAAA7B,aAAAlB,GAAAF,iBAAA,EACAL,KAAAqF,aAAA,WACI/B,EAAA7B,aAAAlB,GAAAF,iBAAA,GACJ,KAGJV,EAAAa,UAAA8E,MAAA,aAIA3F,EAAAa,UAAA+E,OAAA,SAAAC,KA7PiB7F,EAAAY,EAAAkF,WAAA,CADpB/F,GACoBC,SAArB,CAAAH,GAAAkG,YAAqBC,EAAAjE,QAAA/B,mMCLrB,IAAAiG,EAAAtG,EAAA,kBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAE,EAAAL,EAAAK,SAGNM,EAAA,SAAAL,GADA,SAAAK,IAAA,IAAAJ,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAIWF,EAAA2C,WAAA,GAGA3C,EAAA0D,YAAA,GAGA1D,EAAA4C,YAAA,GAGA5C,EAAA2D,aAAA,GAGP3D,EAAA+F,aAAA,GAGA/F,EAAAgG,iBAAA,GAGAhG,EAAAiG,OAAA,GAEOjG,EAAAgD,WAAA,EACAhD,EAAAkG,cAAA,EACPlG,EAAAmG,WAAA,EACOnG,EAAAkD,QAAA,EACAlD,EAAAmF,aAAA,EACAnF,EAAAkF,aAAA,EACPlF,EAAAoG,gBAAA,EACApG,EAAAqG,WAAA,EACArG,EAAA2E,YAAA,GAEA3E,EAAAsG,WAAA,EAEAtG,EAAAuC,KAAA,IAkgDJ,OAriDyC/B,UAAAJ,EAAAL,GAwCrCK,EAAAM,UAAAC,OAAA,WASIjB,GAAAmB,SAAA0F,oBACAxF,SAAA,GAIJX,EAAAM,UAAA8E,MAAA,WACItF,KAAAsG,aAMJpG,EAAAM,UAAA+F,gBAAA,aAkCArG,EAAAM,UAAA8F,UAAA,WACItG,KAAAwG,aACAxG,KAAAyG,UACAzG,KAAA0G,iBACA1G,KAAAwB,WACAxB,KAAA2G,WACA3G,KAAA4G,cACA5G,KAAAkB,KAAA2F,GAAArH,GAAAsH,KAAAC,UAAAC,YAAAhH,KAAAiH,aAAAjH,MACAA,KAAAkB,KAAA2F,GAAArH,GAAAsH,KAAAC,UAAAG,WAAAlH,KAAAmH,YAAAnH,MACAA,KAAAkB,KAAA2F,GAAArH,GAAAsH,KAAAC,UAAAK,UAAApH,KAAAqH,WAAArH,MACAA,KAAAkB,KAAA2F,GAAArH,GAAAsH,KAAAC,UAAAO,aAAAtH,KAAAqH,WAAArH,OAGJE,EAAAM,UAAAiG,QAAA,WAGI,IAAAxD,EAAAzD,GAAA0D,KAAAC,iBAIAoE,EAAAvH,KAAAkB,KAAAK,eAAA,cACAiG,EAAAD,EAAAhG,eAAA,YACAkG,EAAAF,EAAAhG,eAAA,SACAmG,EAAAH,EAAAhG,eAAA,UACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WAEA,IAAAvB,KAAAqC,KACIoF,EAAAhG,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,IACE,IAAA7F,KAAAqC,OACFoF,EAAAhG,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,KAIJ,IAAA7F,KAAAqC,KACIkF,EAAA9F,aAAAjC,GAAAmI,UAAAC,UAAA,IAAApI,GAAAqI,MAAA,IAAA,IAAA,IAAA,KACE,IAAA7H,KAAAqC,OACFkF,EAAA9F,aAAAjC,GAAAmI,UAAAC,UAAA,IAAApI,GAAAqI,MAAA,IAAA,IAAA,IAAA,MAIJN,EAAA9F,aAAAjC,GAAAmI,UAAAG,SAAA7E,EAAAiB,MAAA,GAAA,EAAAjB,EAAA8E,OAAA,GAAA,EAAA9E,EAAAiB,MAAAjB,EAAA8E,QAwBAP,EAAA7E,eAAAM,EAAAiB,MAAAsD,EAAAQ,iBAAAD,QACAN,EAAA9E,eAAAM,EAAAiB,MAAAuD,EAAAO,iBAAAD,QAEA,IAAAE,EAAA9F,KAAAC,MAAAa,EAAAiB,MAAAwD,EAAApF,SAAA,GAAA4B,OACA,GAAA,GAAA+D,EAAA,CACI,IAAAC,EAAAR,EAAApF,SAAA,GAAAb,aAAAjC,GAAA+C,QAAAC,YACAkF,EAAAS,YAAAT,EAAApF,SAAA,IAEA,IAAA,IAAA8F,EAAA,EAAAA,EAAAH,EAAA,EAAAG,IAAA,CACI,IAAAC,EAAA,IAAA7I,GAAAsH,KACAY,EAAAtD,SAAAiE,GAGJ,GAAAJ,EAAA,GAAA,EAEI,IAAAG,EAAA,EAAAA,EAAAH,EAAA,EAAAG,IAAA,EACIC,EAAA,IAAA7I,GAAAsH,MACAwB,aAAA9I,GAAA+C,QAAAC,YAAA0F,EACA,IAAArE,EAAAuE,EAAA,GAAA,EAAA,IAAAjG,KAAAoG,KAAAH,EAAA,IAAA,IAAAjG,KAAAoG,KAAAH,EAAA,GACAC,EAAAG,aAAA3E,GACA6D,EAAAtD,SAAAiE,QAIJ,IAAAD,EAAA,EAAAA,GAAAH,EAAA,GAAA,EAAAG,IACI,IAAA,IAAAK,EAAA,EAAAA,EAAA,EAAAA,IAAA,CAGI,IAFAJ,EAAA,IAAA7I,GAAAsH,MACAwB,aAAA9I,GAAA+C,QAAAC,YAAA0F,EACA,IAAAO,EACI5E,EAAA,IAAAuE,EAAA,WAEAvE,GAAA,GAAA,IAAAuE,EAAA,OAEJC,EAAAG,aAAA3E,GACA6D,EAAAtD,SAAAiE,IAMhB,IAAAK,EAAAnB,EAAAhG,eAAA,WACAoH,EAAAD,EAAAnH,eAAA,eAEA,IAAAvB,KAAAqC,KACIsG,EAAAlH,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAAyC,WAAA,IACE,IAAAzC,KAAAqC,OACFsG,EAAAlH,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA0C,YAAA,KAIJsB,EAAAC,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAEA,IAAA0E,EAAA5I,KAAAkB,KAAAK,eAAA,mBACAsH,EAAA7I,KAAAkB,KAAAK,eAAA,sBACAuH,EAAA9I,KAAAkB,KAAAK,eAAA,oBACAwH,EAAA/I,KAAAkB,KAAAK,eAAA,qBACAyH,EAAAhJ,KAAAkB,KAAAK,eAAA,uBAEAqH,EAAA3E,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACA2E,EAAA5E,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACA4E,EAAA7E,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACA6E,EAAA9E,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACA8E,EAAA/E,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAEA,IAAA5C,EAAAtB,KAAAkB,KAAAK,eAAA,cACA,GAAA,IAAAvB,KAAAqC,KACI,IAAA4G,EAAAzJ,GAAA+D,YAAAvD,KAAAwD,YAAA,SACE,GAAA,IAAAxD,KAAAqC,KACF4G,EAAAzJ,GAAA+D,YAAAvD,KAAAyD,aAAA,IAEJwF,EAAAhF,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACA+E,EAAAC,aAAAjG,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KAEA5C,EAAA6H,YAAAF,EAAA,GAEA,IAAAG,EAAA5J,GAAAmB,SAAA0F,qBACA+C,EAAAvI,SAAA,EAEA,IAAAmD,EAAAC,OACID,EAAAC,MAAA,GACA2E,EAAA3E,MAAA,GACA4E,EAAA5E,MAAA,GACA6E,EAAA7E,MAAA,GACA8E,EAAA9E,MAAA,GACA+E,EAAA/E,MAAA,GACAgF,EAAAhF,MAAA,IAAAjE,KAAAyE,YACAwE,EAAAC,aAAA,IAAAlJ,KAAAyE,aACA2E,EAAAC,QAAA7J,GAAA8J,GAAA,GAAA,IAAAtJ,KAAAyE,cAEA2E,EAAAC,QAAA7J,GAAA8J,GAAA,GAAA,IAAArG,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OAGJ,MAAAjB,EAAAiB,SACIF,EAAAC,MAAA,EACA2E,EAAA3E,MAAA,EACA4E,EAAA5E,MAAA,EACA6E,EAAA7E,MAAA,EACA8E,EAAA9E,MAAA,EACA+E,EAAA/E,MAAA,EACAgF,EAAAhF,MAAA,IACAgF,EAAAC,aAAA,KACAE,EAAAC,QAAA7J,GAAA8J,GAAA,GAAA,KAEAZ,EAAAF,cAAA,GAAAvF,EAAAiB,MAAA,EAAAjB,EAAAiB,MAAA,IAEAqD,EAAAhG,eAAA,QACAiH,cAAA,GAAAvF,EAAAiB,MAAA,EAAAjB,EAAAiB,MAAA,KAGJ,IAAAkE,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACI,GAAA,IAAApI,KAAAqC,KACI4G,EAAAzJ,GAAA+D,YAAAvD,KAAAwD,YAAA,EAAA4E,SACE,GAAA,IAAApI,KAAAqC,KACF4G,EAAAzJ,GAAA+D,YAAAvD,KAAAyD,aAAA,EAAA2E,IAGJ,OADAa,EAAAhF,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACAkE,GACI,KAAA,EACIa,EAAAlF,YAAAd,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAAAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KACA,IAAAF,EAAAC,QACIgF,EAAAhF,MAAA,IAAAjE,KAAAyE,YACAwE,EAAAlF,YAAA,IAAA/D,KAAAyE,YAAA,IAAAzE,KAAAyE,cAEJ,MAAAxB,EAAAiB,QACI+E,EAAAhF,MAAA,IACAgF,EAAAlF,YAAA,IAAA,MAEJ,MACJ,KAAA,EACIkF,EAAAlF,YAAAd,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OAAA,IAAAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KACA,IAAAF,EAAAC,QACIgF,EAAAhF,MAAA,IAAAjE,KAAAyE,YACAwE,EAAAlF,aAAA,IAAA/D,KAAAyE,YAAA,IAAAzE,KAAAyE,cAEJ,MAAAxB,EAAAiB,QACI+E,EAAAhF,MAAA,IACAgF,EAAAlF,aAAA,IAAA,MAEJ,MACJ,KAAA,EACIkF,EAAAlF,YAAAd,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OAAA,IAAAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KACA,IAAAF,EAAAC,QACIgF,EAAAhF,MAAA,IAAAjE,KAAAyE,YACAwE,EAAAlF,aAAA,IAAA/D,KAAAyE,YAAA,IAAAzE,KAAAyE,cAEJ,MAAAxB,EAAAiB,QACI+E,EAAAhF,MAAA,IACAgF,EAAAlF,aAAA,IAAA,MAIZzC,EAAA8C,SAAA6E,GAEAM,QAAAC,IAAAlI,EAAAgB,UAEA2G,EAAAxH,aAAAjC,GAAA6E,WAAAC,KAAA9E,GAAA+E,cAAAC,UAIRtE,EAAAM,UAAAgG,WAAA,WAEI,IAAAiD,EAAAjK,GAAA0D,KAAAC,iBAGA,IAAAnD,KAAAiG,aACIwD,EAAAvF,MAAA,KACIlE,KAAAiG,WAAA,EACE,MAAAwD,EAAAvF,QACFlE,KAAAiG,WAAA,EACA,UAAAzG,GAAAmB,SAAA+I,WAAAvI,MACI3B,GAAAmB,SAAAgJ,UAAA,WAIZnK,GAAA0D,KAAA0G,kBAAA,WACIpK,GAAA0D,KAAAC,iBACAe,MAAA,KACI1E,GAAAmB,SAAAgJ,UAAA,QAEAnK,GAAAmB,SAAAgJ,UAAA,YAKZzJ,EAAAM,UAAAyG,aAAA,SAAA4C,GACI,IAAA7J,KAAAmG,WAAA,IAAAnG,KAAA8C,WAAA,CAGA9C,KAAAkB,KAAAK,eAAA,cAAAe,SAAA,GAAAwH,QAAA,IACA9J,KAAAkB,KAAAK,eAAA,eAAApB,QAAA,EAEA,IAAAyD,EAAA5D,KAAAkB,KAAA6I,qBAAAF,EAAAG,eAEAC,EADAjK,KAAAkB,KAAAK,eAAA,cACAA,eAAA,QACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAD,EAAAtB,KAAAkB,KAAAK,eAAA,cACAuH,EAAA9I,KAAAkB,KAAAK,eAAA,oBACA2I,EAAA5I,EAAAgB,SAAA,GACA4H,EAAA1B,aAAA5E,EAAAC,GAEAD,EAAAC,EAAAG,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,MACIiG,EAAA1B,aAAAxE,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,OACEL,EAAAC,GAAA,GAAAG,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,QACFiG,EAAA1B,cAAA,GAAAxE,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,QAEJgG,EAAA9J,QAAA,EACA8J,EAAAzB,aAAA0B,EAAAC,gBACAnK,KAAA8C,WAAA,IAGJ5C,EAAAM,UAAA2G,YAAA,SAAA0C,GACI,IAAA7J,KAAAmG,WAAA,IAAAnG,KAAA8C,WAAA,CAGA,IAAAc,EAAA5D,KAAAkB,KAAA6I,qBAAAF,EAAAG,eAEAC,EADAjK,KAAAkB,KAAAK,eAAA,cACAA,eAAA,QACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAD,EAAAtB,KAAAkB,KAAAK,eAAA,cACAuH,EAAA9I,KAAAkB,KAAAK,eAAA,oBACA2I,EAAA5I,EAAAgB,SAAA,GACA4H,EAAA1B,aAAA5E,EAAAC,GAEAD,EAAAC,EAAAG,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,MACIiG,EAAA1B,aAAAxE,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,OACEL,EAAAC,GAAA,GAAAG,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,QACFiG,EAAA1B,cAAA,GAAAxE,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,QAEJgG,EAAAzB,aAAA0B,EAAAC,kBAGJjK,EAAAM,UAAA6G,WAAA,SAAAwC,GACI,IAAA7J,KAAAmG,WAAA,IAAAnG,KAAA8C,WAAA,CAGA,IAAAc,EAAA5D,KAAAkB,KAAA6I,qBAAAF,EAAAG,eAEAC,EADAjK,KAAAkB,KAAAK,eAAA,cACAA,eAAA,QACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAD,EAAAtB,KAAAkB,KAAAK,eAAA,cACAuH,EAAA9I,KAAAkB,KAAAK,eAAA,oBACA2I,EAAA5I,EAAAgB,SAAA,GACA4H,EAAA1B,aAAA5E,EAAAC,GACAqG,EAAAzI,aAAAmE,EAAAlE,SAAAtB,MAAA,EAEAwD,EAAAC,EAAAG,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,MACIiG,EAAA1B,aAAAxE,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,OACEL,EAAAC,GAAA,GAAAG,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,QACFiG,EAAA1B,cAAA,GAAAxE,EAAA1B,SAAA,GAAA4B,MAAAF,EAAAC,MAAA,EAAAiG,EAAAhG,MAAAgG,EAAAjG,MAAA,EAAA6E,EAAAf,OAAA/D,EAAAC,QAGJgG,EAAA9J,QAAA,EACA8J,EAAAzB,aAAA0B,EAAAC,gBAEAnK,KAAAgG,cAAAkE,EAAAC,eACAnK,KAAA8C,WAAA,EAGAoH,EAAAzI,aAAAjC,GAAA6E,WAAAC,KAAA9E,GAAA+E,cAAAC,QAEAxE,KAAA8E,WAAA,KAGG5E,EAAAM,UAAAgB,SAAA,WAEH,IADA,IAAAU,EAAAC,KAAAC,MAAA,EAAAD,KAAAD,UAGC,KADGA,EAAAC,KAAAC,MAAA,EAAAD,KAAAD,YACH,IAAAA,IAED,IAAAmG,EAAA,IAAA7I,GAAAsH,KACAuB,EAAAtE,YAAA,IAAAvE,GAAAmE,MAAA,MAAA,IACA0E,EAAApE,MAAA,IACA,IAAAjE,KAAAqC,KACIgG,EAAAC,aAAA9I,GAAA+C,QAAAC,YAAAxC,KAAAyC,WAAAP,GACE,IAAAlC,KAAAqC,OACFgG,EAAAC,aAAA9I,GAAA+C,QAAAC,YAAAxC,KAAA0C,YAAAR,IAEJmG,EAAAC,aAAA9I,GAAA4K,QAAAC,KAAA,EAEA,IAEA7I,EAFAxB,KAAAkB,KAAAK,eAAA,cACAA,eAAA,kBACAA,eAAA,YACAC,EAAA4C,SAAAiE,GACA7G,EAAAc,SAAA,GAAAK,eAAA,IAAA,KAGA,IAAA2H,EAAA,SAAApJ,GACI,IAAA0B,EAAApD,GAAAqC,QAAA,GAAA,KAAAC,OAAAtC,GAAAuC,0BAEAb,EAAA2B,UAAAD,IAGJhB,EAAApC,GAAAqC,QAAA,GAAA,IAAAC,OAAAtC,GAAAuC,0BAEAuI,EAAAjC,GAEA,IAAArG,EAAAxC,GAAAyC,SAAAqI,GAEAvH,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAqG,EAAAxF,UAAAE,IAGG7C,EAAAM,UAAAmB,SAAA,WAEH,IAAAsB,EAAAzD,GAAA0D,KAAAC,iBAEAoE,EAAAvH,KAAAkB,KAAAK,eAAA,cACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WAEAC,EADA+F,EAAAhG,eAAA,kBACAA,eAAA,YACAD,EAAAtB,KAAAkB,KAAAK,eAAA,cAEA,GAAA,IAAAvB,KAAAqC,KACI,IAAA4G,EAAAzJ,GAAA+D,YAAAvD,KAAAwD,YAAAhC,EAAAc,SAAA,GAAAb,aAAAjC,GAAA+C,QAAAC,YAAArB,YACE,GAAA,IAAAnB,KAAAqC,KACF4G,EAAAzJ,GAAA+D,YAAAvD,KAAAyD,aAAAjC,EAAAc,SAAA,GAAAb,aAAAjC,GAAA+C,QAAAC,YAAArB,OAEJ8H,EAAAhF,MAAA,EACAgF,EAAAT,aAAAxI,KAAAgG,eACAiD,EAAAC,aAAAjG,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KAEA,IAAAqG,EAAAtH,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAEA,IAAAF,EAAAC,QACIsG,EAAA,IAAAvK,KAAAyE,YACAwE,EAAAC,aAAA,IAAAlJ,KAAAyE,cAEJ,MAAAxB,EAAAiB,QACIqG,EAAA,IACAtB,EAAAC,aAAA,MAGJ5H,EAAA6H,YAAAF,EAAA,GAGA,IAAAqB,EAAA,SAAApJ,GACI,IAAA0B,EAAApD,GAAAqC,QAAA,IAAA0I,GAAAzI,OAAAtC,GAAAuC,0BAEAb,EAAA2B,UAAAD,IAGJhB,EAAApC,GAAAqC,QAAA,IAAA0I,EAAAA,EAAA,IAAAzI,OAAAtC,GAAAuC,0BAEAuI,EAAArB,GAEA,IAAAjH,EAAAxC,GAAAyC,SAAAqI,GAEAvH,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAiH,EAAApG,UAAAE,IAGJ7C,EAAAM,UAAAmG,SAAA,WACI,IAAA1D,EAAAzD,GAAA0D,KAAAC,iBAEAoE,EAAAvH,KAAAkB,KAAAK,eAAA,cACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WAEAiJ,EADAjD,EAAAhG,eAAA,QACAE,aAAAjC,GAAAmI,UAEA6C,EAAAC,UAAAxH,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACAsG,EAAAE,YAAAlL,GAAAmL,MAAA,IAAA,IAAA,IAAA,KAEA,IAAAC,EAAA5K,KAAAgG,cACA6E,EAAA5H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAEA4G,EAAA7H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EAGA6G,EAAA9H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACA8G,EAAA/H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,GAEA,IAAAF,EAAAC,QACIuG,EAAAC,UAAA,EAAAzK,KAAAyE,YACAoG,EAAA,IAAA7K,KAAAyE,YACAqG,EAAA,EACAC,EAAA,EAAA/K,KAAAyE,YACAuG,EAAA,GAAAhL,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIsG,EAAAC,UAAA,EACAI,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAMJ,IAFA,IAAAC,EAAAJ,EAEAC,GAAAG,GACIT,EAAAU,OAAAN,EAAAK,GACAA,GAAAF,EACAP,EAAAW,OAAAP,EAAAK,GACAA,GAAAD,EAEJR,EAAAY,UAGJlL,EAAAM,UAAAqE,YAAA,SAAAwG,EAAAC,GACI,IAAArI,EAAAzD,GAAA0D,KAAAC,iBACAa,EAAAhE,KAAAkB,KAAAK,eAAA,WAEAgK,EAAAvL,KAAAkB,KAAAK,eAAA,gBAGAiK,EAAA,IAAAhM,GAAAsH,KACAyE,EAAAnH,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAvH,MAAA,GACAuH,EAAA5H,SAAA,IAAApE,GAAAmE,KAAA0H,EAAAxH,EAAAwH,EAAAvH,EAAA,KACA0H,EAAA7I,eAAA2I,GAAArI,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OAAAoH,GAAArI,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,QAEA,IAAAF,EAAAC,OACIuH,EAAA7I,eAAA2I,EAAAtL,KAAAyE,YAAA6G,EAAAtL,KAAAyE,aAEJ,MAAAxB,EAAAiB,OACIsH,EAAA7I,eAAA2I,EAAAA,GAGJ,IAAAhB,EAAA,SAAApJ,GACI,IAAAuK,EAAAjM,GAAAkM,OAAA,GAAA,GAAA5J,OAAAtC,GAAAuC,0BACA0J,EAAAE,OAAA,GACAzK,EAAA2B,UAAA4I,IAGJ7J,EAAApC,GAAAqC,QAAA,EAAA,KAAAC,OAAAtC,GAAAuC,0BACAH,EAAA+J,OAAA,GAEArB,EAAAkB,GAEA,IAAAxJ,EAAAxC,GAAAyC,SAAAqI,GAEAvH,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAwJ,EAAA3I,UAAAE,GAIA,IAAA,IAAAqF,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACIoD,EAAA,IAAAhM,GAAAsH,KACAyE,EAAAnH,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAAlD,aAAA9I,GAAAoM,WACA,IAAAC,EAAAL,EAAA/J,aAAAjC,GAAAoM,WACAE,EAAAD,EAAAE,YAAA/L,KAAA8F,iBAAA,GACA+F,EAAAG,QAAAF,GAEA,IACAG,EADA9J,KAAAC,MAAA,IAAAD,KAAAD,UACAC,KAAA+J,GAAA,IAEAC,EAAAb,EAAA,EAAAnJ,KAAAiK,IAAAH,GAAA9J,KAAAD,SACAmK,EAAAf,EAAA,EAAAnJ,KAAAmK,IAAAL,GAAA9J,KAAAD,SAEA2B,EAAAwH,EAAAxH,EAAAsI,EACArI,EAAAuH,EAAAvH,EAAA,IAAAuI,EAEAb,EAAAvH,MAAAqH,GAAArI,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OAAA,KACAsH,EAAA5H,SAAA,IAAApE,GAAAmE,KAAAE,EAAAC,GACA0H,EAAA7I,eAAA2I,GAAArI,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OAAAoH,GAAArI,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,QAEA,IAAAF,EAAAC,QACIuH,EAAAvH,MAAA,KAAAqH,EAAAtL,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIsH,EAAAvH,MAAA,KAAAqH,GAGJ,IAAAiB,EAAA/M,GAAA0L,OAAA,EAAA,IAAA1L,GAAAmE,KAAAE,EAAAsI,EAAArI,EAAAuI,IAAAvK,OAAAtC,GAAAgN,4BACAC,EAAAjN,GAAAkN,SAAA,EAAA,IAAA5K,OAAAtC,GAAAgN,4BACAvI,EAAAzE,GAAAqC,QAAA,EAAA,GAAAC,OAAAtC,GAAAgN,4BAEAhB,EAAA3I,UAAA0J,GACAf,EAAA3I,UAAA4J,GACAjB,EAAA3I,UAAAoB,GAIAuH,EAAA/J,aAAAjC,GAAAoM,WAAAe,KAAAb,EAAA3K,QAIRjB,EAAAM,UAAAoM,gBAAA,WACI,IAAA3J,EAAAzD,GAAA0D,KAAAC,iBACA0J,EAAA7M,KAAAkB,KAAAK,eAAA,SACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAsL,EAAA5I,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EAEA,IAAAF,EAAAC,QACI4I,EAAA5I,MAAA,EAAAjE,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACI2I,EAAA5I,MAAA,GAGJ4I,EAAA1M,QAAA,EAEAH,KAAAoG,WAAA,EAEApG,KAAA8M,wBACA9M,KAAA+M,4BAGJ7M,EAAAM,UAAAsM,sBAAA,WACI,IAAAD,EAAA7M,KAAAkB,KAAAK,eAAA,SACAyL,EAAAH,EAAAtL,eAAA,OACA0L,EAAAJ,EAAAtL,eAAA,OAEA2L,EAAA,WACI,IAIAC,EAAA3N,GAAA4N,SAAA,GAAA,IAAAtL,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SANA,WACIiL,MAOJnK,EAAAvD,GAAAuD,SAAAoK,EAAAnL,GAEAgL,EAAAnK,UAAAE,IAGJsK,EAAA,WACI,IAIAF,EAAA3N,GAAA4N,SAAA,GAAA,IAAAtL,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SANA,WACIoL,MAOJtK,EAAAvD,GAAAuD,SAAAoK,EAAAnL,GAEAiL,EAAApK,UAAAE,IAGJmK,IACAG,KAGJnN,EAAAM,UAAAuM,yBAAA,WACI,IAAAF,EAAA7M,KAAAkB,KAAAK,eAAA,SACAyL,EAAAH,EAAAtL,eAAA,OACA0L,EAAAJ,EAAAtL,eAAA,OAEA+L,EAAA,WACI,IAaAC,EAAA/N,GAAAkM,OAAA,EAAA,GAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAfA,WACI,IAGAuL,EAAAhO,GAAAkM,OAAA,EAAA,KAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SALA,WACIqL,MAMJvK,EAAAvD,GAAAuD,SAAAyK,EAAAxL,GAEAgL,EAAAnK,UAAAE,KAOJA,EAAAvD,GAAAuD,SAAAwK,EAAAvL,GAEAgL,EAAAnK,UAAAE,IAGJ0K,EAAA,WACI,IAaAD,EAAAhO,GAAAkM,OAAA,EAAA,KAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAfA,WACI,IAGAsL,EAAA/N,GAAAkM,OAAA,EAAA,GAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SALA,WACIwL,MAMJ1K,EAAAvD,GAAAuD,SAAAwK,EAAAvL,GAEAiL,EAAApK,UAAAE,KAOJA,EAAAvD,GAAAuD,SAAAyK,EAAAxL,GAEAiL,EAAApK,UAAAE,IAGJuK,IACAG,KAGJvN,EAAAM,UAAAkG,eAAA,WAKI,IAJA,IAAAzD,EAAAzD,GAAA0D,KAAAC,iBACA+B,EAAAlF,KAAAkB,KAAAK,eAAA,WAGA6G,EAFAlD,EAAA4E,QAAA,EAEA1B,EAAA,EAAAA,IAAA,EACIoD,EAAA,IAAAhM,GAAAsH,MACAwB,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OAEA,IAAA2F,EAAAvL,KAAAoG,KAAAtF,EAAAiB,MAAAsH,EAAAtH,OACAyJ,EAAAxL,KAAAoG,KAAAtF,EAAA8E,OAAAyD,EAAAzD,QACA,OAAAK,GACI,KAAA,EACI,IAAA,IAAAK,EAAA,EAAAA,EAAAkF,EAAAlF,IACI,IAAA,IAAAmF,EAAA,EAAAA,EAAA,EAAAA,IACI,GAAA,IAAAA,EAAA,CACI,IAAApC,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,aAAAvF,EAAAiB,MAAA,EAAAsH,EAAAtH,MAAA,GACAsH,EAAAtC,aAAAsC,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,OACC,CACD+C,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,aAAAvF,EAAAiB,MAAA,EAAAsH,EAAAtH,MAAA,GACAsH,EAAAtC,cAAA,GAAAsC,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,IAIZ,MACJ,KAAA,EACI,IAAAA,EAAA,EAAAA,EAAAkF,EAAAlF,IACI,IAAAmF,EAAA,EAAAA,EAAA,EAAAA,IACI,GAAA,IAAAA,EAAA,CACIpC,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAqC,SAAA,IACArC,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,cAAA,GAAAvF,EAAAiB,MAAA,EAAAsH,EAAAtH,MAAA,IACAsH,EAAAtC,aAAAsC,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,OACC,CACD+C,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAqC,SAAA,IACArC,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,cAAA,GAAAvF,EAAAiB,MAAA,EAAAsH,EAAAtH,MAAA,IACAsH,EAAAtC,cAAA,GAAAsC,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,IAIZ,MACJ,KAAA,EACI,IAAAA,EAAA,EAAAA,EAAAiF,EAAAjF,IACI,IAAAmF,EAAA,EAAAA,EAAA,EAAAA,IACI,GAAA,IAAAA,EAAA,CACIpC,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAqC,SAAA,GACArC,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,aAAAgD,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,GACA+C,EAAAtC,cAAA,GAAAjG,EAAA8E,OAAA,EAAAyD,EAAAtH,MAAA,QACC,CACDsH,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAqC,SAAA,GACArC,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,cAAA,GAAAgD,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,IACA+C,EAAAtC,cAAA,GAAAjG,EAAA8E,OAAA,EAAAyD,EAAAtH,MAAA,IAIZ,MACJ,KAAA,EACI,IAAAuE,EAAA,EAAAA,EAAAiF,EAAAjF,IACI,IAAAmF,EAAA,EAAAA,EAAA,EAAAA,IACI,GAAA,IAAAA,EAAA,CACIpC,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAqC,SAAA,IACArC,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,aAAAgD,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,GACA+C,EAAAtC,aAAAjG,EAAA8E,OAAA,EAAAyD,EAAAtH,MAAA,OACC,CACDsH,EAAA,IAAAhM,GAAAsH,KACA5B,EAAAd,SAAAoH,GACAA,EAAAlD,aAAA9I,GAAA+C,QACAiJ,EAAA/J,aAAAjC,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,GACA2F,EAAAqC,SAAA,IACArC,EAAAtH,MAAA,GAAAsH,EAAAtH,MACAsH,EAAAzD,OAAA,GAAAyD,EAAAzD,OACAyD,EAAAhD,cAAA,GAAAgD,EAAAzD,OAAA,EAAAyD,EAAAzD,OAAAU,IACA+C,EAAAtC,aAAAjG,EAAA8E,OAAA,EAAAyD,EAAAtH,MAAA,KAQxB,IAAAF,EAAAhE,KAAAkB,KAAAK,eAAA,WACAuM,EAAA9J,EAAAzC,eAAA,SAEA0I,EADAjK,KAAAkB,KAAAK,eAAA,eACAA,eAAA,QACA0I,EAAAH,QAAA,EACAG,EAAA/F,MAAAjB,EAAAiB,MAAA,IACA,IAAAJ,EAAAgK,EAAAlK,SAAAE,GAAAb,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,OACA,IAAAF,EAAAC,QACIH,EAAAgK,EAAAlK,SAAAE,EAAA9D,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIJ,EAAAgK,EAAAlK,SAAAE,GAEJmG,EAAAlG,YAAA,IAAAvE,GAAAmE,KAAAmK,EAAAlK,SAAAC,EAAAC,IACAmG,EAAAhG,MAAAD,EAAAC,OAGG/D,EAAAM,UAAA0E,QAAA,SAAA6I,GACH,IAAA7I,EAAAlF,KAAAkB,KAAAK,eAAA,WACAN,EAAAjB,KAiBA4B,EAAApC,GAAAkM,OAAA,EAAA,KAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAjBA,SAAAf,GACI,IAKAuK,EAAAjM,GAAAkM,OAAA,EAAA,GAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAPA,WACI,KAAA8L,EAAA5M,MAAAF,EAAAC,KAAAK,eAAA,cAAAe,SAAA,GAAA0L,oBAAAD,EAAAC,oBACI/M,EAAAgE,aAAA,KAORlC,EAAAvD,GAAAuD,SAAA0I,EAAAzJ,GAEAd,EAAA2B,UAAAE,KAOJA,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAkD,EAAArC,UAAAE,GAEA/C,KAAAiO,eAGJ/N,EAAAM,UAAAyN,YAAA,WACI,IACAhE,EADAjK,KAAAkB,KAAAK,eAAA,eACAA,eAAA,QAQAK,EAAApC,GAAAkM,OAAA,EAAA,KAAA5J,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SARA,SAAAf,GACI,IAAAuK,EAAAjM,GAAAkM,OAAA,EAAA,GAAA5J,OAAAtC,GAAAgN,4BAEAtL,EAAA2B,UAAA4I,KAOJ1I,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAiI,EAAApH,UAAAE,IAGG7C,EAAAM,UAAA4E,OAAA,WACH,IAAApF,KAAAgD,OAAA,CAIAhD,KAAAgD,QAAA,EACAhD,KAAAmG,WAAA,EAOA,IALA,IAAAlD,EAAAzD,GAAA0D,KAAAC,iBACAa,EAAAhE,KAAAkB,KAAAK,eAAA,WAGAD,EAAAtB,KAAAkB,KAAAK,eAAA,cACA6G,EAAA,EAAAA,EAAA9G,EAAA4M,cAAA9F,IACI9G,EAAAgB,SAAA8F,GAAA3G,aAAAjC,GAAA6E,WAAAC,KAAA9E,GAAA+E,cAAA4J,OAGJ,IAAA5C,EAAAvL,KAAAkB,KAAAK,eAAA,gBACA,IAAA6G,EAAA,EAAAA,EAAAmD,EAAA2C,cAAA9F,IAAA,CACI,IAAAyD,EAAAN,EAAAjJ,SAAA8F,GAAA3G,aAAAjC,GAAAoM,WACA,GAAAC,EAAA,CAEIA,EAAAuC,KADA,UAKR,IAAAC,EAAArO,KAAAkB,KAAAK,eAAA,QACA8M,EAAApK,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACAmK,EAAAlO,QAAA,EAEA,IAAAmO,EAAArL,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,GACA,IAAAF,EAAAC,QACIoK,EAAApK,MAAA,IAAAjE,KAAAyE,YACA6J,EAAA,GAAAtO,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACImK,EAAApK,MAAA,IACAqK,EAAA,IAGJtO,KAAAqF,aAAA,WACI,IAAAkJ,EAAA/O,GAAAkM,OAAA,GAAA,KAAA5J,OAAAtC,GAAAgP,yBACAH,EAAAxL,UAAA0L,GAEA,IAAAE,EAAAjP,GAAAqC,QAAA,GAAAyM,GAAAxM,OAAAtC,GAAAgP,yBACAH,EAAAxL,UAAA4L,GAEAzO,KAAAqF,aAAA,WACI,IAAAkJ,EAAA/O,GAAAkM,OAAA,GAAA,GAAA5J,OAAAtC,GAAAgN,4BACA6B,EAAAxL,UAAA0L,GAEAvO,KAAA0O,SAAA,IACJ,GACA1O,KAAA8E,WAAA,IACJ,GACA9E,KAAA8E,WAAA,KAEG5E,EAAAM,UAAAmE,QAAA,WACH,IACA+D,EADA1I,KAAAkB,KAAAK,eAAA,cACAA,eAAA,WACAoN,EAAAjG,EAAAnH,eAAA,QACAoD,EAAA+D,EAAAnH,eAAA,WACAvB,KAAAkB,KAAAK,eAAA,mBACAqN,MAAA,UAEA5O,KAAAmG,WAAA,EACAwI,EAAAxO,QAAA,EACAwE,EAAAxE,QAAA,EAEAwE,EAAAlD,aAAAjC,GAAAoM,WAAAe,KAAA,WAEA3M,KAAA4M,kBAEA5M,KAAA8E,WAAA,GAEA9E,KAAAqF,aAAA,WACIrF,KAAA6O,cAEA7O,KAAA8E,WAAA,IACJ,KAGJ5E,EAAAM,UAAAqO,YAAA,WACI,IAAA5L,EAAAzD,GAAA0D,KAAAC,iBACA0L,EAAA7O,KAAAkB,KAAAK,eAAA,eACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAN,EAAAjB,KAEA6O,EAAA5K,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACA2K,EAAA3F,aAAAjG,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KAEAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACA,IAAAF,EAAAC,QACI4K,EAAA5K,MAAA,IAAAjE,KAAAyE,YACA,EAAAzE,KAAAyE,YACAoK,EAAA3F,aAAA,IAAAlJ,KAAAyE,cAEJ,MAAAxB,EAAAiB,QACI2K,EAAA5K,MAAA,IACA,EACA4K,EAAA3F,aAAA,MAGJ,IAUA4F,EAAAtP,GAAAkM,OAAA,GAAA,KAAA5J,OAAAtC,GAAAgP,yBAEAK,EAAAhM,UAAAiM,GAEA,IAAAC,EAAAvP,GAAAqC,QAAA,GAAA,GAAAC,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAhBA,WACIhB,EAAAoE,aAAA,WACI,IAAAoG,EAAAjM,GAAAkM,OAAA,GAAA,GAAA5J,OAAAtC,GAAAgN,4BAEAqC,EAAAhM,UAAA4I,GAEAxK,EAAAyN,SAAA,IACJ,KAWJ3L,EAAAvD,GAAAuD,SAAAgM,EAAA/M,GAEA6M,EAAAhM,UAAAE,IAGJ7C,EAAAM,UAAAoG,YAAA,WAEI,IAAA3D,EAAAzD,GAAA0D,KAAAC,iBAEAyD,EAAA5G,KAAAkB,KAAAK,eAAA,eACAD,EAAAtB,KAAAkB,KAAAK,eAAA,cACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAyN,EAAApI,EAAArF,eAAA,SACA0N,EAAArI,EAAArF,eAAA,eACA2N,EAAAtI,EAAArF,eAAA,cACA4N,EAAA3P,GAAA+D,YAAAjC,EAAAgB,SAAA,IACA6M,EAAA1N,aAAAjC,GAAA6E,WAAAC,KAAA9E,GAAA+E,cAAA4J,OACAgB,EAAAP,MAAA,UACAO,EAAA3G,aAAAvF,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KACA0C,EAAAxC,SAAA+K,GACA7N,EAAAgB,SAAA,GAAAwH,QAAA,EAGAkF,EAAA/K,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACA8K,EAAAjL,YAAA,EAAAd,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KAEA+K,EAAAhL,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,GACA+K,EAAAlL,YAAAd,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAAAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KAEAgL,EAAAjL,MAAAhB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACAgL,EAAAnL,YAAA,EAAAd,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,KAEA,IAAAF,EAAAC,QACI+K,EAAA/K,MAAA,EAAAjE,KAAAyE,YACAuK,EAAAjL,YAAA,EAAA,IAAA/D,KAAAyE,aACAwK,EAAAhL,MAAA,GAAAjE,KAAAyE,YACAwK,EAAAlL,YAAA,IAAA/D,KAAAyE,YAAA,IAAAzE,KAAAyE,aACAyK,EAAAjL,MAAA,EAAAjE,KAAAyE,YACAyK,EAAAnL,YAAA,EAAA,IAAA/D,KAAAyE,aACA0K,EAAA3G,aAAA,IAAAxI,KAAAyE,cAEJ,MAAAxB,EAAAiB,QACI8K,EAAA/K,MAAA,EACA+K,EAAAjL,YAAA,EAAA,KACAkL,EAAAhL,MAAA,GACAgL,EAAAlL,YAAA,IAAA/D,KAAAyE,YAAA,KACAyK,EAAAjL,MAAA,EACAiL,EAAAnL,YAAA,EAAA,KACAoL,EAAA3G,aAAA,MAIJ5B,EAAAnF,aAAAjC,GAAAmI,UAAAC,UAAA,IAAApI,GAAAqI,MAAA,EAAA,EAAA,EAAA,KACAjB,EAAAnF,aAAAjC,GAAAmI,UAAAG,SAAA7E,EAAAiB,MAAA,GAAA,GAAA,GAAAjB,EAAA8E,OAAA,EAAA,KAAA9E,EAAAiB,MAAAjB,EAAA8E,QACA/H,KAAAiP,cACAjP,KAAAoP,gBAAAD,GACAnP,KAAAqP,iBAGJnP,EAAAM,UAAAyO,YAAA,WACI,IAAAhM,EAAAzD,GAAA0D,KAAAC,iBAEAyD,EAAA5G,KAAAkB,KAAAK,eAAA,eACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACA0N,EAAArI,EAAArF,eAAA,eACAN,EAAAjB,KAEAsP,EAAArM,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACA,IAAAF,EAAAC,QACIqL,EAAA,IAAAtP,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIoL,EAAA,KAGJ,IAaAC,EAAA/P,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,MAAA,EAAA2L,EAAA,IAAAxN,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAfA,SAAAf,GACI,IAGAuO,EAAAjQ,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,KAAA2L,EAAA,IAAAxN,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SALA,WACIhB,EAAAgO,gBAMJlM,EAAAvD,GAAAuD,SAAA0M,EAAAzN,GAEAd,EAAA2B,UAAAE,KAOJA,EAAAvD,GAAAuD,SAAAwM,EAAAvN,GAEAiN,EAAApM,UAAAE,IAGJ7C,EAAAM,UAAA4O,gBAAA,SAAAD,GACI,IAAAlM,EAAAzD,GAAA0D,KAAAC,iBAEAa,EAAAhE,KAAAkB,KAAAK,eAAA,WACAN,EAAAjB,KAEAsP,EAAArM,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACA,IAAAF,EAAAC,QACIqL,EAAA,IAAAtP,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIoL,EAAA,KAGJ,IAaAC,EAAA/P,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,MAAA,EAAA2L,EAAA,IAAAxN,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SAfA,SAAAf,GACI,IAGAuO,EAAAjQ,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,KAAA2L,EAAA,IAAAxN,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SALA,WACIhB,EAAAmO,gBAAAD,KAMJpM,EAAAvD,GAAAuD,SAAA0M,EAAAzN,GAEAd,EAAA2B,UAAAE,KAOJA,EAAAvD,GAAAuD,SAAAwM,EAAAvN,GAEAmN,EAAAtM,UAAAE,IAGJ7C,EAAAM,UAAA6O,cAAA,WACI,IAAApM,EAAAzD,GAAA0D,KAAAC,iBAEAyD,EAAA5G,KAAAkB,KAAAK,eAAA,eACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACA0I,EAAArD,EAAArF,eAAA,QACAiJ,EAAAP,EAAAxI,aAAAjC,GAAAmI,UAEA6C,EAAAC,UAAAxH,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACAsG,EAAAE,YAAAlL,GAAAmL,MAAA,IAAA,IAAA,IAAA,KAEA,IAAAC,EAAA3H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACA2G,EAAA5H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAEA4G,EAAA7H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAGA6G,EAAA9H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACA8G,EAAA/H,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,GAEA,IAAAF,EAAAC,QACIuG,EAAAC,UAAA,EAAAzK,KAAAyE,YACAmG,EAAA,IAAA5K,KAAAyE,YACAoG,EAAA,IAAA7K,KAAAyE,YACAqG,EAAA,IAAA9K,KAAAyE,YACAsG,EAAA,EAAA/K,KAAAyE,YACAuG,EAAA,GAAAhL,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIsG,EAAAC,UAAA,EACAG,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,EACAC,EAAA,IAMJ,IAFA,IAAAC,EAAAJ,EAEAC,GAAAG,GACIT,EAAAU,OAAAN,EAAA,EAAAK,GACAA,GAAAF,EACAP,EAAAW,OAAAP,EAAA,EAAAK,GACAA,GAAAD,EAEJR,EAAAY,SAEA,IAAAnK,EAAAjB,KAEA0P,EAAAlQ,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,MAAAiH,EAAA,IAAA9I,OAAAtC,GAAAgN,4BACAmD,EAAAnQ,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,KAAAiH,EAAA,IAAA9I,OAAAtC,GAAAgN,4BAEAoD,EAAApQ,GAAAyC,SAAA,WAEI,IAAA4N,EAAArQ,GAAAyC,SAAA,WACIhB,EAAAoO,kBAEJpF,EAAApH,UAAArD,GAAAuD,SAAA4M,EAAAE,IAOJ,SAAArF,EAAAI,EAAAC,EAAAC,EAAAC,EAAAC,GACI,IAAA8E,EAAAlF,EAEA,KAAAE,GAAAG,GACIT,EAAAU,OAAA4E,EAAAjF,GACAiF,GAAA/E,EACAP,EAAAW,OAAA2E,EAAAjF,GACAiF,GAAA9E,EAEJR,EAAAY,SAfA2E,CAAAvF,EAAAI,EAAAC,EAAAC,EAAAC,EAAAC,KAGJf,EAAApH,UAAArD,GAAAuD,SAAA2M,EAAAE,KAgBJ1P,EAAAM,UAAAkO,QAAA,SAAAsB,GACIhQ,KAAAiQ,YACAjQ,KAAAkQ,aACAlQ,KAAAqF,aAAA,WACIrF,KAAAmQ,aAAAH,IACJ,IACAhQ,KAAAkG,gBAAA,GAGJhG,EAAAM,UAAAyP,UAAA,WAEI,IAAAhN,EAAAzD,GAAA0D,KAAAC,iBAEA8M,EAAAjQ,KAAAkB,KAAAK,eAAA,aAGA0O,EAAAxO,aAAAjC,GAAAmI,UAAAC,UAAA,IAAApI,GAAAqI,MAAA,EAAA,EAAA,EAAA,GACAoI,EAAAxO,aAAAjC,GAAAmI,UAAAG,SAAA7E,EAAAiB,MAAA,GAAA,GAAA,GAAAjB,EAAA8E,OAAA,EAAA,KAAA9E,EAAAiB,MAAAjB,EAAA8E,SAEJ7H,EAAAM,UAAA2P,aAAA,SAAAH,GAEI,IAAA/M,EAAAzD,GAAA0D,KAAAC,iBAEA8M,EAAAjQ,KAAAkB,KAAAK,eAAA,aACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACA6O,EAAAH,EAAA1O,eAAA,UACAN,EAAAjB,KAGAoQ,EAAAvJ,GAAArH,GAAAsH,KAAAC,UAAAC,YAAAhH,KAAAqQ,cAAArQ,MACAoQ,EAAAvJ,GAAArH,GAAAsH,KAAAC,UAAAK,UAAApH,KAAAsQ,YAAAtQ,MAIIoQ,EAAA3O,aAAAjC,GAAA+C,QAAAC,YADJwN,EACIhQ,KAAA6F,aAAA,GAEA7F,KAAA6F,aAAA,GAGJuK,EAAAtM,EAAAb,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAEA,IAAAqM,EAAAtN,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACAsM,EAAAvN,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAEA,IAAAF,EAAAC,QACImM,EAAAtM,EAAA,IAAA9D,KAAAyE,YACA8L,EAAA,IAAAvQ,KAAAyE,YACA+L,EAAA,IAAAxQ,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIkM,EAAAtM,EAAA,IACAyM,EAAA,IACAC,EAAA,KAGJ,IAOA5O,EAAApC,GAAAqC,QAAA,IAAA0O,GAAAzO,OAAAtC,GAAAgN,4BAEAxK,EAAAxC,GAAAyC,SATA,SAAAf,GACI,IAAA0B,EAAApD,GAAAqC,QAAA,IAAA2O,GAAA1O,OAAAtC,GAAAgN,4BACAtL,EAAA2B,UAAAD,GAEA3B,EAAAwP,kBAOJ1N,EAAAvD,GAAAuD,SAAAnB,EAAAI,GAEAoO,EAAAvN,UAAAE,IAEJ7C,EAAAM,UAAA0P,WAAA,WACI,IAAAjN,EAAAzD,GAAA0D,KAAAC,iBAEA8M,EAAAjQ,KAAAkB,KAAAK,eAAA,aACAyC,EAAAhE,KAAAkB,KAAAK,eAAA,WACAmP,EAAAT,EAAA1O,eAAA,QACAsK,EAAA6E,EAAAjP,aAAAjC,GAAAoM,WACAE,EAAAD,EAAAE,YAEA4E,EAAA1N,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACAL,EAAAZ,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,EACAJ,EAAAb,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IAEA,IAAAF,EAAAC,QACIJ,EAAA,EACAC,EAAA,IAAA9D,KAAAyE,YACAkM,EAAA,EAAA3Q,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIL,EAAA,EACAC,EAAA,IACA6M,EAAA,GAGJ7E,EAAA8E,UAAAC,MAAA5M,MAAA,GAAA6M,MAAA,IAAAtR,GAAAmE,KAAAgN,EAAAA,GACAD,EAAA3M,YAAAF,EAAAC,GAEA+H,EAAAc,KAAAb,EAAA3K,OAGJjB,EAAAM,UAAAsE,WAAA,SAAAiM,GACI,IAGAC,EAHAhR,KAAAkB,KAAAK,eAAA,eAGA+G,aAAA9I,GAAAyR,aACAD,EAAAE,OAAA,GAGAF,EAAAlF,KAAA9L,KAAA+F,OAAAgL,GAMAC,EAAArE,QAGJzM,EAAAM,UAAA6P,cAAA,WACI,IAAApN,EAAAzD,GAAA0D,KAAAC,iBACAa,EAAAhE,KAAAkB,KAAAK,eAAA,WAEA6O,EADApQ,KAAAkB,KAAAK,eAAA,aACAA,eAAA,UAGAiP,GADAvN,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MACAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,MAEA,IAAAF,EAAAC,QACI,IAAAjE,KAAAyE,YACA+L,EAAA,KAAAxQ,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACI,IACAsM,EAAA,MAGJ,IAAAW,EAAA3R,GAAAqC,QAAA,GAAA2O,GACAJ,EAAAvN,UAAAsO,IAGJjR,EAAAM,UAAA8P,YAAA,WACI,IAAArN,EAAAzD,GAAA0D,KAAAC,iBACAa,EAAAhE,KAAAkB,KAAAK,eAAA,WAEA6O,EADApQ,KAAAkB,KAAAK,eAAA,aACAA,eAAA,UAEAgP,EAAAtN,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAAA,IACAjB,EAAAiB,MAAAF,EAAA1B,SAAA,GAAA4B,MAEA,IAAAF,EAAAC,QACIsM,EAAA,IAAAvQ,KAAAyE,YACAzE,KAAAyE,aAEJ,MAAAxB,EAAAiB,QACIqM,EAAA,KAIJ,IAAAY,EAAA3R,GAAAqC,QAAA,GAAA0O,GACAH,EAAAvN,UAAAsO,GAEAnR,KAAAoR,UACApR,KAAAqR,YAGJnR,EAAAM,UAAA8Q,KAAA,SAAAC,EAAAC,GAMI,IALA,IAAAvO,EAAAzD,GAAA0D,KAAAC,iBAEAmO,EADAtR,KAAAkB,KAAAK,eAAA,cACAA,eAAA,QAEAW,EAAAC,KAAAC,MAAA,EAAAD,KAAAD,UAGC,KADGA,EAAAC,KAAAC,MAAA,EAAAD,KAAAD,YACH,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,IAED,IAAAsJ,EAAA,IAAAhM,GAAAsH,KACA0E,EAAAvH,MAAA,GAAA/B,EACAsJ,EAAAlD,aAAA9I,GAAA+C,QAAAC,YAAAxC,KAAA6F,aAAA,IAEA2F,EAAAzH,YAAAd,EAAAiB,MAAA,EAAAjB,EAAAiB,MAAA,EAAA,EAAAqN,EAAAtO,EAAA8E,OAAA,EAAAyD,EAAAzD,OAAA,EAAAyJ,GAEAF,EAAAlN,SAAAoH,GAEA,IAAAiG,EAAA,WACI,IAWAlC,EAAA/P,GAAAgQ,OAAA,EAAA,IAAAhQ,GAAAmE,KAAAV,EAAAiB,MAAA,GAAA,GAAA,GAAAjB,EAAA8E,OAAAyJ,KAEAxP,EAAAxC,GAAAyC,SAbA,WACIuJ,EAAAzH,YAAAd,EAAAiB,MAAA,EAAAjB,EAAAiB,MAAA,EAAA,EAAAqN,EAAAtO,EAAA8E,OAAA,EAAAyD,EAAAzD,OAAA,EAAAyJ,GACAC,IACAlI,QAAAC,IAAAgC,EAAA5H,YAYJb,EAAAvD,GAAAuD,SAAAwM,EAAAvN,GAEAwJ,EAAA3I,UAAAE,IAGJ0O,KAKJvR,EAAAM,UAAA4Q,QAAA,aAKAlR,EAAAM,UAAA6Q,SAAA,WAyBIK,OAAAC,YAAAC,gBAIJ1R,EAAAM,UAAAiQ,cAAA,WAoBIiB,OAAAC,YAAAC,gBAGJ1R,EAAAM,UAAA+E,OAAA,SAAAC,GACI,GAAAxF,KAAAkG,eAAA,CACI,IAAA+J,EAAAjQ,KAAAkB,KAAAK,eAAA,aACAsQ,EAAA5B,EAAAxO,aAAAjC,GAAAmI,UAAAC,UAEAiK,EAAAC,OAAA,KACI7B,EAAAxO,aAAAjC,GAAAmI,UAAAoK,QACAF,EAAAG,KAAAH,EAAAC,OAAA,IAAAtM,GAEAqM,EAAAA,EACA5B,EAAAxO,aAAAjC,GAAAmI,UAAAG,UAAA,MAAA,KAAA,KAAA,OAEA9H,KAAAkG,gBAAA,EAKR,GAAAlG,KAAAoG,UAAA,CAKI,IAJA,IAAAyG,EAAA7M,KAAAkB,KAAAK,eAAA,SACAD,EAAAtB,KAAAkB,KAAAK,eAAA,cAEA0Q,EAAA,KACA7J,EAAA,EAAAA,EAAA9G,EAAA4M,cAAA9F,IACI,OAAA9G,EAAAgB,SAAA8F,GAAA3G,aAAAjC,GAAA+C,QAAAC,YAAArB,OACI8Q,EAAA3Q,EAAAgB,SAAA8F,IAGRyE,EAAA9I,YAAAkO,EAAA9H,eAAA8H,EAAA9M,eAAA,OA/hDRM,WAAA,CADC7F,EAAA,CAAAJ,GAAA0S,eACwChS,EAAAM,UAAA,kBAAA,GAGzCiF,WAAA,CADC7F,EAAA,CAAAJ,GAAA2S,UACkCjS,EAAAM,UAAA,mBAAA,GAGnCiF,WAAA,CADC7F,EAAA,CAAAJ,GAAA0S,eACyChS,EAAAM,UAAA,mBAAA,GAG1CiF,WAAA,CADC7F,EAAA,CAAAJ,GAAA2S,UACmCjS,EAAAM,UAAA,oBAAA,GAGpCiF,WAAA,CADC7F,EAAA,CAAAJ,GAAA0S,eACmChS,EAAAM,UAAA,oBAAA,GAGpCiF,WAAA,CADC7F,EAAA,CAAAJ,GAAA4S,iBACyClS,EAAAM,UAAA,wBAAA,GAG1CiF,WAAA,CADC7F,EAAA,CAAAJ,GAAA6S,aAC2BnS,EAAAM,UAAA,cAAA,GArBXN,EAAAuF,WAAA,CADpB/F,GACoBQ,GAArB,CAAAV,GAAAkG,WAAqBC,EAAAjE,QAAAxB","sourcesContent":["import gamemanager from './gamemanager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    gamemanager : gamemanager = null;\r\n    active : boolean = true;\r\n    public drop : boolean = false;\r\n    mergeDelayCheck: boolean = false;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        var Collider_manager = cc.director.getCollisionManager();\r\n        Collider_manager.enabled = true;\r\n        // Collider_manager.enabledDebugDraw = true;\r\n        Collider_manager.enabledDrawBoundingBox = true;\r\n    }\r\n\r\n    public onCollisionEnter(other , self){\r\n        // 옆에 벽 부딪혔을때 반응 없애기\r\n        if(other.node.name === \"boxCollider_left\" ||\r\n        other.node.name === \"boxCollider_right\"\r\n        ){\r\n            return;\r\n        }\r\n\r\n        var canvasNode = self.node.parent.parent;\r\n        var gameScreen = canvasNode.getChildByName(\"gameScreen\");\r\n        var background = canvasNode.getChildByName(\"background\");\r\n        var nextBackground = background.getChildByName(\"nextBackground\");\r\n        var nextBall = nextBackground.getChildByName(\"nextBall\");\r\n        \r\n        // 처음 부딪혔을때 한번만 실행하는 코드들\r\n        if(this.drop && other.node.name !== \"boxCollider_top\" && other.node.name !== \"boxCollider_warning\"){\r\n            this.drop = false;\r\n            // 움직일 볼 세팅하기\r\n            canvasNode.getComponent(gamemanager).copyBall();\r\n\r\n            // 모션 효과 \r\n            var onNext = function(node){\r\n                // next볼 세팅하기\r\n                var random = Math.floor(Math.random() * 5);\r\n                do {\r\n                    random = Math.floor(Math.random() * 5);\r\n                } while (random === 0 || random === 1);\r\n\r\n                if(canvasNode.getComponent(gamemanager).skin === 0){\r\n                    nextBall.children[0].getComponent(cc.Sprite).spriteFrame = canvasNode.getComponent(gamemanager).mergeImage[random];\r\n                }else if(canvasNode.getComponent(gamemanager).skin === 1){\r\n                    nextBall.children[0].getComponent(cc.Sprite).spriteFrame = canvasNode.getComponent(gamemanager).mergeImage2[random];\r\n                }\r\n                nextBall.children[0].setContentSize(140,140);\r\n\r\n                var scaleUpAction2 = cc.scaleTo(0.1 , 0.35).easing(cc.easeQuadraticActionOut());\r\n\r\n                node.runAction(scaleUpAction2);\r\n                \r\n                // touchcheck 0으로 초기화\r\n                canvasNode.getComponent(gamemanager).touchcheck = 0;\r\n            }\r\n\r\n            var scaleUpAction = cc.scaleTo(0.1 , 0).easing(cc.easeQuadraticActionOut());\r\n            \r\n            var callback = cc.callFunc(onNext);\r\n\r\n            var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n            nextBall.children[0].runAction(sequence);\r\n        }\r\n\r\n        // 같은공끼리 부딪혔을때\r\n        if(self.node.getComponent(cc.Sprite).spriteFrame === other.node.getComponent(cc.Sprite).spriteFrame && this.active && other.node.getComponent(NewClass).active && !this.mergeDelayCheck && !other.node.getComponent(NewClass).mergeDelayCheck && !canvasNode.getComponent(gamemanager).isfail){  //magsqr\r\n\r\n            var screenSize = cc.view.getVisibleSize();\r\n\r\n            // 다음 prefab으로 미리 세팅하기\r\n            var spriteNumber = parseInt(other.node.getComponent(cc.Sprite).spriteFrame.name);\r\n            if(canvasNode.getComponent(gamemanager).skin === 0){\r\n                var newPrefab = cc.instantiate(canvasNode.getComponent(gamemanager).mergePrefab[spriteNumber + 1]);\r\n            }else if(canvasNode.getComponent(gamemanager).skin === 1){\r\n                var newPrefab = cc.instantiate(canvasNode.getComponent(gamemanager).mergePrefab2[spriteNumber + 1]);\r\n            }\r\n\r\n            // prefab 위치 , 크기 세팅\r\n            var prefabPos = new cc.Vec2((self.node.position.x + other.node.position.x) / 2 , (self.node.position.y + other.node.position.y) / 2);  // other.node.position\r\n            newPrefab.setPosition(prefabPos);\r\n\r\n            var gameBox = canvasNode.getChildByName(\"gameBox\");\r\n            newPrefab.scale = screenSize.width / gameBox.children[0].width * 0.75;\r\n\r\n            // self , other 노드 삭제\r\n            self.node.destroy();\r\n            other.node.destroy();\r\n            this.active = false;\r\n            other.node.getComponent(NewClass).active = false;\r\n        \r\n            // gameScreen에 preFab 넣고 세팅하기\r\n            gameScreen.addChild(newPrefab);\r\n            newPrefab.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\r\n\r\n            if(gameBox.scale >= 0.8){\r\n                newPrefab.scale = 0.75 * canvasNode.getComponent(gamemanager).screenScale;\r\n            }\r\n            if(screenSize.width >= 1450){\r\n                newPrefab.scale = 0.75;\r\n            }\r\n\r\n            var saveScale = newPrefab.scale;\r\n\r\n            var onScale255 = function(node){\r\n                var scaleUpAction2 = cc.scaleTo(0.1 , saveScale).easing(cc.easeQuadraticActionOut());\r\n                node.runAction(scaleUpAction2);\r\n            }\r\n    \r\n            var scaleUpAction = cc.scaleTo(0.1 , newPrefab.scale + newPrefab.scale / 10).easing(cc.easeQuadraticActionOut());\r\n            \r\n            var callback = cc.callFunc(onScale255);\r\n    \r\n            var sequence = cc.sequence(scaleUpAction, callback);\r\n    \r\n            newPrefab.runAction(sequence);\r\n\r\n            if(newPrefab.getComponent(cc.Sprite).spriteFrame.name === \"10\"){\r\n                canvasNode.getComponent(gamemanager).success();\r\n            }\r\n\r\n            // merge 딜레이 주기\r\n            newPrefab.getComponent(NewClass).mergeDelay(newPrefab);\r\n\r\n            // effect\r\n            canvasNode.getComponent(gamemanager).mergeEffect(prefabPos , newPrefab.width);\r\n\r\n            canvasNode.getComponent(gamemanager).soundsData(2);\r\n        }\r\n    }\r\n\r\n    onCollisionStay(other , self){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var canvasNode = self.node.parent.parent;\r\n        var gameBox = canvasNode.getChildByName(\"gameBox\");\r\n        var gameScreen = canvasNode.getChildByName(\"gameScreen\");\r\n        \r\n        // 옆에 벽 부딪혔을때 반응 없애기\r\n        if(other.node.name === \"boxCollider_left\" ||\r\n        other.node.name === \"boxCollider_right\" ||\r\n        canvasNode.getComponent(gamemanager).warningError < 50\r\n        ){\r\n            canvasNode.getComponent(gamemanager).warningError +=1;\r\n            return;\r\n        }\r\n\r\n        if(!this.drop && other.node.name === \"boxCollider_warning\" && !canvasNode.getComponent(gamemanager).fadeWarning){  // 처음에 세팅한 블럭들이 걸려버림 (수정 필요)\r\n            canvasNode.getComponent(gamemanager).fadeWarning = true;\r\n            canvasNode.getComponent(gamemanager).warning(self.node);\r\n        }\r\n\r\n        var boxCollider_top_y = 276 * screenSize.width / gameBox.children[0].width;\r\n        var self_y = self.node.getPositionY() * screenSize.width / gameBox.children[0].width;\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            boxCollider_top_y = 276 * canvasNode.getComponent(gamemanager).screenScale;\r\n            self_y = self.node.getPositionY() * canvasNode.getComponent(gamemanager).screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            boxCollider_top_y = 276;\r\n            self_y = self.node.getPositionY();\r\n        }\r\n        // console.log(self.node.getPositionY());\r\n        \r\n        if(!this.drop && other.node.name === \"boxCollider_top\"){\r\n            canvasNode.getComponent(gamemanager).failed();\r\n        }\r\n\r\n        // 같은공끼리 부딪혔을때\r\n        if(self.node.getComponent(cc.Sprite).spriteFrame === other.node.getComponent(cc.Sprite).spriteFrame && this.active && other.node.getComponent(NewClass).active && !this.mergeDelayCheck && !other.node.getComponent(NewClass).mergeDelayCheck && !canvasNode.getComponent(gamemanager).isfail){  //magsqr\r\n\r\n            var screenSize = cc.view.getVisibleSize();\r\n\r\n            // 다음 prefab으로 미리 세팅하기\r\n            var spriteNumber = parseInt(other.node.getComponent(cc.Sprite).spriteFrame.name);\r\n            if(canvasNode.getComponent(gamemanager).skin === 0){\r\n                var newPrefab = cc.instantiate(canvasNode.getComponent(gamemanager).mergePrefab[spriteNumber + 1]);\r\n            }else if(canvasNode.getComponent(gamemanager).skin === 1){\r\n                var newPrefab = cc.instantiate(canvasNode.getComponent(gamemanager).mergePrefab2[spriteNumber + 1]);\r\n            }\r\n\r\n            // prefab 위치 , 크기 세팅\r\n            var prefabPos = new cc.Vec2((self.node.position.x + other.node.position.x) / 2 , (self.node.position.y + other.node.position.y) / 2);  // other.node.position\r\n            newPrefab.setPosition(prefabPos);\r\n\r\n            var gameBox = canvasNode.getChildByName(\"gameBox\");\r\n            newPrefab.scale = screenSize.width / gameBox.children[0].width * 0.75;\r\n\r\n            // self , other 노드 삭제\r\n            self.node.destroy();\r\n            other.node.destroy();\r\n            this.active = false;\r\n            other.node.getComponent(NewClass).active = false;\r\n        \r\n            // gameScreen에 preFab 넣고 세팅하기\r\n            gameScreen.addChild(newPrefab);\r\n            newPrefab.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\r\n\r\n            if(gameBox.scale >= 0.8){\r\n                newPrefab.scale = 0.75 * canvasNode.getComponent(gamemanager).screenScale;\r\n            }\r\n            if(screenSize.width >= 1450){\r\n                newPrefab.scale = 0.75;\r\n            }\r\n\r\n            var saveScale = newPrefab.scale;\r\n\r\n            var onScale255 = function(node){\r\n                var scaleUpAction2 = cc.scaleTo(0.1 , saveScale).easing(cc.easeQuadraticActionOut());\r\n                node.runAction(scaleUpAction2);\r\n            }\r\n    \r\n            var scaleUpAction = cc.scaleTo(0.1 , newPrefab.scale + newPrefab.scale / 10).easing(cc.easeQuadraticActionOut());\r\n            \r\n            var callback = cc.callFunc(onScale255);\r\n    \r\n            var sequence = cc.sequence(scaleUpAction, callback);\r\n    \r\n            newPrefab.runAction(sequence);\r\n\r\n            if(newPrefab.getComponent(cc.Sprite).spriteFrame.name === \"10\"){\r\n                canvasNode.getComponent(gamemanager).success();\r\n            }\r\n\r\n            // merge 딜레이 주기\r\n            newPrefab.getComponent(NewClass).mergeDelay(newPrefab);\r\n\r\n            // effect\r\n            canvasNode.getComponent(gamemanager).mergeEffect(prefabPos , newPrefab.width);\r\n\r\n            canvasNode.getComponent(gamemanager).soundsData(2);\r\n        }\r\n    }\r\n\r\n    // onCollisionExit(other , self){\r\n    //     console.log(\"끝났음!!\");\r\n    // }\r\n\r\n    mergeDelay(newPrefab:cc.Node){\r\n        // merge 딜레이 주기\r\n        newPrefab.getComponent(NewClass).mergeDelayCheck = true;\r\n        this.scheduleOnce(function(){\r\n            newPrefab.getComponent(NewClass).mergeDelayCheck = false;\r\n        } , 0.1)\r\n    }\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    update (dt) {}\r\n}\r\n","import NewClass from \"./ballCollider\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class gamemanager extends cc.Component {\r\n\r\n    @property([cc.SpriteFrame])\r\n    public mergeImage: cc.SpriteFrame[] = [];\r\n\r\n    @property([cc.Prefab])\r\n    public mergePrefab: cc.Node[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    public mergeImage2: cc.SpriteFrame[] = [];\r\n\r\n    @property([cc.Prefab])\r\n    public mergePrefab2: cc.Node[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    effectsImage: cc.SpriteFrame[] = [];\r\n\r\n    @property([cc.AnimationClip])\r\n    effectsAnimation: cc.AnimationClip[] = [];\r\n    \r\n    @property([cc.AudioClip])\r\n    sounds: cc.AudioClip[] = [];\r\n\r\n    public touchcheck:number = 0; // 현재 상황(터치 방지용)\r\n    public lastTouchPosX:number = 0;  // 마지막 터치 (이 자리에 이어서 시작해야함)\r\n    sizeChange:number = 0; // 사이즈 체인지\r\n    public isfail = false;\r\n    public fadeWarning: boolean = false;\r\n    public warningError: number = 0;\r\n    endBlackscreen:boolean= false;\r\n    touchStop:boolean = false; // 게임 끝내고 터치 막기\r\n    screenScale:number = 0.8; // 모든 노드 화면 사이즈 조정\r\n\r\n    shineMove:boolean = false; // 효과가 수박 따라나니게 만들기 위함\r\n\r\n    skin:number = 0;  // 0:기본스킨  1:겨울스킨\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // Applovin 게임 시작 시\r\n        // mraid.addEventListener(\"stateChange\", function() {\r\n        //     if (mraid.getState() == 'hidden')\r\n        //         this.isMute = true;\r\n        //     else\r\n        //         this.isMute = false;\r\n        // });\r\n\r\n        var physics_manager = cc.director.getPhysicsManager();\r\n        physics_manager.enabled = true;\r\n    }\r\n\r\n\r\n    start () {\r\n        this.startGame();\r\n        // Ironsrc //게임 시작 시\r\n        // dapi.isReady() ? this.onReadyCallback() : dapi.addEventListener(\"ready\", gamemanager.instance.onReadyCallback);\r\n    }\r\n\r\n    // Ironsrc Begin\r\n    onReadyCallback() { // 게임 시작시\r\n        // // if (gamemanager.instance.isStarted)\r\n        // //     return;\r\n\r\n        // if (dapi.isViewable()) {\r\n        //     gamemanager.instance.startGame();\r\n        // }\r\n\r\n        // dapi.addEventListener(\"viewableChange\", function (e) {\r\n        //     if (e.isViewable)\r\n        //         gamemanager.instance.startGame();\r\n        // });\r\n\r\n        // dapi.addEventListener(\"audioVolumeChange\", function () {\r\n        //     if (dapi.getAudioVolume() > 0)\r\n        //         cc.audioEngine.setEffectsVolume(1.0);\r\n        //     else\r\n        //         cc.audioEngine.setEffectsVolume(0);\r\n        // });\r\n\r\n        // dapi.addEventListener(\"adResized\", function (e) {\r\n        //     console.log(e);\r\n        // });\r\n\r\n        // if (dapi.getAudioVolume() > 0)\r\n        //     cc.audioEngine.setEffectsVolume(1.0);\r\n        // else\r\n        //     cc.audioEngine.setEffectsVolume(0);\r\n\r\n        // dapi.removeEventListener(\"ready\", gamemanager.instance.onReadyCallback);\r\n\r\n        // console.log(dapi.getScreenSize());\r\n    }\r\n\r\n    startGame(){\r\n        this.screensize();\r\n        this.setting();\r\n        this.warningSetting();\r\n        this.nextBall();\r\n        this.lineDraw();\r\n        this.startScreen();\r\n        this.node.on(cc.Node.EventType.TOUCH_START , this.onTouchStart , this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE , this.onTouchMove , this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END , this.onTouchEnd , this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n    }\r\n\r\n    setting(){\r\n\r\n        // 현재 화면 크기\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        //////////// ui 세팅\r\n\r\n        var background = this.node.getChildByName(\"background\");\r\n        var woodDown = background.getChildByName(\"woodDown\");\r\n        var table = background.getChildByName(\"table\");\r\n        var woodUp = background.getChildByName(\"woodUp\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n\r\n        if(this.skin === 0){\r\n            table.getComponent(cc.Sprite).spriteFrame = this.effectsImage[10];\r\n        }else if(this.skin === 1){\r\n            table.getComponent(cc.Sprite).spriteFrame = this.effectsImage[11];\r\n        }\r\n\r\n        // 배경 색상 지정\r\n        if(this.skin === 0){\r\n            background.getComponent(cc.Graphics).fillColor = new cc.Color(248 , 227 , 179 , 255);\r\n        }else if(this.skin === 1){\r\n            background.getComponent(cc.Graphics).fillColor = new cc.Color(248 , 227 , 179 , 255); // 기본색\r\n            // background.getComponent(cc.Graphics).fillColor = new cc.Color(103 , 105 , 145 , 255); // 크리스마스 버전\r\n            // background.getComponent(cc.Graphics).fillColor = new cc.Color(168 , 224 , 248 , 255); // 크리스마스 버전\r\n        }\r\n        background.getComponent(cc.Graphics).fillRect(screenSize.width / 2 * -1 , screenSize.height / 2 * -1 , screenSize.width , screenSize.height);\r\n\r\n        // // 배경 이미지들 크기&위치 지정\r\n        // if(this.skin === 1){\r\n        //     this.snow(0 , 0);\r\n        //     this.scheduleOnce(function(){\r\n        //         this.snow(200 , 50);\r\n        //     } , 0.25)\r\n        //     this.scheduleOnce(function(){\r\n        //         this.snow(-100 , 150);\r\n        //     } , 1)\r\n        //     this.scheduleOnce(function(){\r\n        //         this.snow(400 , 100);\r\n        //     } , 1.5)\r\n        //     this.scheduleOnce(function(){\r\n        //         this.snow(700 , 150);\r\n        //     } , 1.75)\r\n        //     this.scheduleOnce(function(){\r\n        //         this.snow(-250 , 50);\r\n        //     } , 2)\r\n        //     this.scheduleOnce(function(){\r\n        //         this.snow(-700 , 50);\r\n        //     } , 3);\r\n        // }\r\n        woodDown.setContentSize(screenSize.width , woodDown.getContentSize().height);\r\n        table.setContentSize(screenSize.width , table.getContentSize().height);\r\n\r\n        var number = Math.floor(screenSize.width / woodUp.children[0].width);\r\n        if(number >= 1){\r\n            var woodUpImage = woodUp.children[0].getComponent(cc.Sprite).spriteFrame;\r\n            woodUp.removeChild(woodUp.children[0]);\r\n\r\n            for(var i = 0 ; i < number + 1 ; i++){\r\n                var childNode = new cc.Node();\r\n                woodUp.addChild(childNode);\r\n            }\r\n\r\n            if(number % 2 === 0){\r\n                // 짝수일 때\r\n                for(var i = 0 ; i < number + 1 ; i++){\r\n                    var childNode = new cc.Node();\r\n                    childNode.addComponent(cc.Sprite).spriteFrame = woodUpImage;\r\n                    var x = i % 2 === 1 ? 697 * Math.ceil(i / 2) : -697 * Math.ceil(i / 2);\r\n                    childNode.setPositionX(x);\r\n                    woodUp.addChild(childNode);\r\n                }\r\n            }else{\r\n                // 홀수일 때\r\n                for(var i = 0 ; i < (number + 1) / 2 ; i++){\r\n                    for(var j = 0 ; j < 2 ; j++){\r\n                        var childNode = new cc.Node();\r\n                        childNode.addComponent(cc.Sprite).spriteFrame = woodUpImage;\r\n                        if(j === 0){\r\n                            var x = i * 697 + 348.5;\r\n                        }else{\r\n                            var x = (i * 697 + 348.5) * -1;\r\n                        }\r\n                        childNode.setPositionX(x);\r\n                        woodUp.addChild(childNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var mission = background.getChildByName(\"mission\");\r\n        var missionBall = mission.getChildByName(\"missionBall\");\r\n\r\n        if(this.skin === 0){\r\n            missionBall.getComponent(cc.Sprite).spriteFrame = this.mergeImage[10];\r\n        }else if(this.skin === 1){\r\n            missionBall.getComponent(cc.Sprite).spriteFrame = this.mergeImage2[10];\r\n        }\r\n\r\n        // gameBox 크기 지정\r\n        gameBox.scale = screenSize.width / gameBox.children[0].width;\r\n\r\n        var boxCollider_top = this.node.getChildByName(\"boxCollider_top\")\r\n        var boxCollider_bottom = this.node.getChildByName(\"boxCollider_bottom\");\r\n        var boxCollider_left = this.node.getChildByName(\"boxCollider_left\");\r\n        var boxCollider_right = this.node.getChildByName(\"boxCollider_right\");\r\n        var boxCollider_warning = this.node.getChildByName(\"boxCollider_warning\");\r\n\r\n        boxCollider_top.scale = screenSize.width / gameBox.children[0].width;\r\n        boxCollider_bottom.scale = screenSize.width / gameBox.children[0].width;\r\n        boxCollider_left.scale = screenSize.width / gameBox.children[0].width;\r\n        boxCollider_right.scale = screenSize.width / gameBox.children[0].width;\r\n        boxCollider_warning.scale = screenSize.width / gameBox.children[0].width;\r\n\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n        if(this.skin === 0){\r\n            var cloneNode = cc.instantiate(this.mergePrefab[2]);\r\n        }else if(this.skin === 1){\r\n            var cloneNode = cc.instantiate(this.mergePrefab2[2]);\r\n        }\r\n        cloneNode.scale = screenSize.width / gameBox.children[0].width * 0.75;\r\n        cloneNode.setPositionY(750 * (screenSize.width / gameBox.children[0].width));\r\n\r\n        gameScreen.insertChild(cloneNode , 0);\r\n\r\n        var physics_manager = cc.director.getPhysicsManager();\r\n        physics_manager.enabled = true;\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            gameBox.scale = 0.8;\r\n            boxCollider_top.scale = 0.8;\r\n            boxCollider_bottom.scale = 0.8;\r\n            boxCollider_left.scale = 0.8;\r\n            boxCollider_right.scale = 0.8;\r\n            boxCollider_warning.scale = 0.8;\r\n            cloneNode.scale = 0.75 * this.screenScale;\r\n            cloneNode.setPositionY(750 * this.screenScale);\r\n            physics_manager.gravity = cc.v2(0, -2000 * this.screenScale);\r\n        }else{\r\n            physics_manager.gravity = cc.v2(0, -2000 * screenSize.width / gameBox.children[0].width);\r\n        }\r\n\r\n        if(screenSize.width >= 1450){\r\n            gameBox.scale = 1;\r\n            boxCollider_top.scale = 1;\r\n            boxCollider_bottom.scale = 1;\r\n            boxCollider_left.scale = 1;\r\n            boxCollider_right.scale = 1;\r\n            boxCollider_warning.scale = 1;\r\n            cloneNode.scale = 0.75;\r\n            cloneNode.setPositionY(750);\r\n            physics_manager.gravity = cc.v2(0, -2000);\r\n\r\n            mission.setPositionX((screenSize.width / 2 - screenSize.width / 6) * -1);\r\n\r\n            var ring = background.getChildByName(\"ring\");\r\n            ring.setPositionX((screenSize.width / 2 - screenSize.width / 6) * -1);\r\n        }\r\n\r\n        for(var i = 0 ; i < 3 ; i++){\r\n            if(this.skin === 0){\r\n                var cloneNode = cc.instantiate(this.mergePrefab[9 - i]);\r\n            }else if(this.skin === 1){\r\n                var cloneNode = cc.instantiate(this.mergePrefab2[9 - i]);\r\n            }\r\n            cloneNode.scale = screenSize.width / gameBox.children[0].width * 0.75;\r\n            switch(i){\r\n                case 0:\r\n                    cloneNode.setPosition(140 * (screenSize.width / gameBox.children[0].width) , 180 * (screenSize.width / gameBox.children[0].width));\r\n                    if(gameBox.scale >= 0.8){\r\n                        cloneNode.scale = 0.75 * this.screenScale;\r\n                        cloneNode.setPosition(140 * this.screenScale, 180 * this.screenScale);\r\n                    }\r\n                    if(screenSize.width >= 1450){\r\n                        cloneNode.scale = 0.75;\r\n                        cloneNode.setPosition(140 , 180);\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    cloneNode.setPosition(-135 * (screenSize.width / gameBox.children[0].width) , 260 * (screenSize.width / gameBox.children[0].width));\r\n                    if(gameBox.scale >= 0.8){\r\n                        cloneNode.scale = 0.75 * this.screenScale;\r\n                        cloneNode.setPosition(-135 * this.screenScale, 260 * this.screenScale);\r\n                    }\r\n                    if(screenSize.width >= 1450){\r\n                        cloneNode.scale = 0.75;\r\n                        cloneNode.setPosition(-135 , 260);\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    cloneNode.setPosition(-185 * (screenSize.width / gameBox.children[0].width) , 495 * (screenSize.width / gameBox.children[0].width));\r\n                    if(gameBox.scale >= 0.8){\r\n                        cloneNode.scale = 0.75 * this.screenScale;\r\n                        cloneNode.setPosition(-185 * this.screenScale, 495 * this.screenScale);\r\n                    }\r\n                    if(screenSize.width >= 1450){\r\n                        cloneNode.scale = 0.75;\r\n                        cloneNode.setPosition(-185 , 495);\r\n                    }\r\n                    break;\r\n            }\r\n            gameScreen.addChild(cloneNode);\r\n\r\n            console.log(gameScreen.children);\r\n\r\n            cloneNode.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\r\n        }\r\n    }\r\n\r\n    screensize(){\r\n\r\n        var visibleSize = cc.view.getVisibleSize();\r\n\r\n        // 처음 한번만 실행\r\n        if(this.sizeChange === 0){\r\n            if(visibleSize.width < 1450){\r\n                this.sizeChange = 1;\r\n            }else if(visibleSize.width >= 1450){\r\n                this.sizeChange = 2;\r\n                if(cc.director.getScene().name !== \"main2\"){\r\n                    cc.director.loadScene(\"main2\");\r\n                }\r\n            }\r\n        }\r\n        cc.view.setResizeCallback(function(){\r\n            var newNisibleSize = cc.view.getVisibleSize();\r\n            if(newNisibleSize.width < 1450){\r\n                cc.director.loadScene(\"main\");\r\n            }else{\r\n                cc.director.loadScene(\"main2\");\r\n            }\r\n        })\r\n    }\r\n\r\n    onTouchStart(event:cc.Event.EventTouch){\r\n        if(this.touchStop || this.touchcheck !==0){\r\n            return;\r\n        }\r\n        this.node.getChildByName(\"gameScreen\").children[0].opacity = 255;\r\n        this.node.getChildByName(\"startScreen\").active = false;\r\n\r\n        var position = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        var background = this.node.getChildByName(\"background\");\r\n        var line = background.getChildByName(\"line\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n        var boxCollider_left = this.node.getChildByName(\"boxCollider_left\");\r\n        var startBall = gameScreen.children[0];\r\n        startBall.setPositionX(position.x);  // position.x / gameBox.scale\r\n\r\n        if(position.x > (gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)){\r\n            startBall.setPositionX((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale));\r\n        }else if(position.x < ((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)) *-1){\r\n            startBall.setPositionX(((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)) *-1);\r\n        }\r\n        line.active = true;\r\n        line.setPositionX(startBall.getPositionX());\r\n        this.touchcheck = 1;\r\n    }\r\n\r\n    onTouchMove(event:cc.Event.EventTouch){\r\n        if(this.touchStop || this.touchcheck !==1){\r\n            return;\r\n        }\r\n        var position = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        var background = this.node.getChildByName(\"background\");\r\n        var line = background.getChildByName(\"line\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n        var boxCollider_left = this.node.getChildByName(\"boxCollider_left\");\r\n        var startBall = gameScreen.children[0];\r\n        startBall.setPositionX(position.x);\r\n\r\n        if(position.x > (gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)){\r\n            startBall.setPositionX((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale));\r\n        }else if(position.x < ((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)) *-1){\r\n            startBall.setPositionX(((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)) *-1);\r\n        }\r\n        line.setPositionX(startBall.getPositionX());\r\n    }\r\n\r\n    onTouchEnd(event:cc.Event.EventTouch){\r\n        if(this.touchStop || this.touchcheck !==1){\r\n            return;\r\n        }\r\n        var position = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        var background = this.node.getChildByName(\"background\");\r\n        var line = background.getChildByName(\"line\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n        var boxCollider_left = this.node.getChildByName(\"boxCollider_left\");\r\n        var startBall = gameScreen.children[0];\r\n        startBall.setPositionX(position.x);\r\n        startBall.getComponent(NewClass).drop = true;\r\n\r\n        if(position.x > (gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)){\r\n            startBall.setPositionX((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale));\r\n        }else if(position.x < ((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)) *-1){\r\n            startBall.setPositionX(((gameBox.children[0].width * gameBox.scale) / 2 - (startBall.width * startBall.scale) / 2 - (boxCollider_left.height * gameBox.scale)) *-1);\r\n        }\r\n\r\n        line.active = false;\r\n        line.setPositionX(startBall.getPositionX());\r\n\r\n        this.lastTouchPosX = startBall.getPositionX(); // 터치 저장\r\n        this.touchcheck = 2;\r\n\r\n        // 공 떨어트리기\r\n        startBall.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\r\n\r\n        this.soundsData(1);\r\n    }\r\n\r\n    public nextBall(){\r\n        var random = Math.floor(Math.random() * 5);\r\n        do {\r\n            random = Math.floor(Math.random() * 5);\r\n        } while (random === 0 || random === 1);\r\n\r\n        var childNode = new cc.Node();\r\n        childNode.setPosition(new cc.Vec2(-43.55 , 0));\r\n        childNode.scale = 0.35;\r\n        if(this.skin === 0){\r\n            childNode.addComponent(cc.Sprite).spriteFrame = this.mergeImage[random];\r\n        }else if(this.skin === 1){\r\n            childNode.addComponent(cc.Sprite).spriteFrame = this.mergeImage2[random];\r\n        }\r\n        childNode.addComponent(cc.Widget).left = 5;\r\n\r\n        var background = this.node.getChildByName(\"background\");\r\n        var nextBackground = background.getChildByName(\"nextBackground\");\r\n        var nextBall = nextBackground.getChildByName(\"nextBall\");\r\n        nextBall.addChild(childNode);\r\n        nextBall.children[0].setContentSize(140,140);\r\n\r\n        // 모션 효과 \r\n        var onScale255 = function(node){\r\n            var scaleUpAction2 = cc.scaleTo(0.1 , 0.35).easing(cc.easeQuadraticActionOut());\r\n\r\n            node.runAction(scaleUpAction2);\r\n        }\r\n\r\n        var scaleUpAction = cc.scaleTo(0.1 , 0.4).easing(cc.easeQuadraticActionOut());\r\n\r\n        onScale255(childNode);\r\n        \r\n        var callback = cc.callFunc(onScale255);\r\n\r\n        var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n        childNode.runAction(sequence);\r\n    }\r\n\r\n    public copyBall(){\r\n        // 볼 준비\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        var background = this.node.getChildByName(\"background\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var nextBackground = background.getChildByName(\"nextBackground\");\r\n        var nextBall = nextBackground.getChildByName(\"nextBall\");\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n\r\n        if(this.skin === 0){\r\n            var cloneNode = cc.instantiate(this.mergePrefab[nextBall.children[0].getComponent(cc.Sprite).spriteFrame.name]);\r\n        }else if(this.skin === 1){\r\n            var cloneNode = cc.instantiate(this.mergePrefab2[nextBall.children[0].getComponent(cc.Sprite).spriteFrame.name]);\r\n        }\r\n        cloneNode.scale = 0;\r\n        cloneNode.setPositionX(this.lastTouchPosX);\r\n        cloneNode.setPositionY(750 * (screenSize.width / gameBox.children[0].width));\r\n\r\n        var motionScale = 0.75 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            motionScale = 0.75 * this.screenScale;\r\n            cloneNode.setPositionY(750 * this.screenScale);\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            motionScale = 0.75;\r\n            cloneNode.setPositionY(750);\r\n        }\r\n        \r\n        gameScreen.insertChild(cloneNode , 0);\r\n\r\n        // 모션 효과 \r\n        var onScale255 = function(node){\r\n            var scaleUpAction2 = cc.scaleTo(0.15 , motionScale).easing(cc.easeQuadraticActionOut());\r\n\r\n            node.runAction(scaleUpAction2);\r\n        }\r\n\r\n        var scaleUpAction = cc.scaleTo(0.15 , motionScale + motionScale / 10).easing(cc.easeQuadraticActionOut());\r\n\r\n        onScale255(cloneNode);\r\n        \r\n        var callback = cc.callFunc(onScale255);\r\n\r\n        var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n        cloneNode.runAction(sequence);\r\n    }\r\n\r\n    lineDraw(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        var background = this.node.getChildByName(\"background\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var line = background.getChildByName(\"line\");\r\n        var graphics = line.getComponent(cc.Graphics);\r\n        \r\n        graphics.lineWidth = 4 * (screenSize.width / gameBox.children[0].width);\r\n        graphics.strokeColor = cc.color(255,255,255,255);\r\n\r\n        var startX = this.lastTouchPosX;\r\n        var startY = 750 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        var endY = 0 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        // 간격과 선의 길이\r\n        var gapLength = 5 * (screenSize.width / gameBox.children[0].width);  // 각 점 사이의 간격\r\n        var dashLength = 10 * (screenSize.width / gameBox.children[0].width); // 각 점의 길이\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            graphics.lineWidth = 4 * this.screenScale;\r\n            startY = 750 * this.screenScale;\r\n            endY = 0;\r\n            gapLength = 5 * this.screenScale;\r\n            dashLength = 10 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            graphics.lineWidth = 4;\r\n            startY = 750;\r\n            endY = 0;\r\n            gapLength = 5;\r\n            dashLength = 10;\r\n        }\r\n\r\n        // 점선 그리기\r\n        var currentPosition = startY;\r\n\r\n        while (currentPosition >= endY) {\r\n            graphics.moveTo(startX, currentPosition);\r\n            currentPosition -= gapLength;\r\n            graphics.lineTo(startX, currentPosition);\r\n            currentPosition -= dashLength;\r\n        }\r\n        graphics.stroke();\r\n    }\r\n\r\n    mergeEffect(startPos:cc.Vec2 , prefabWidth:number){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n\r\n        var effectScreen = this.node.getChildByName(\"effectScreen\");\r\n\r\n        // circle effect\r\n        var newNode = new cc.Node();\r\n        effectScreen.addChild(newNode);\r\n        newNode.addComponent(cc.Sprite);\r\n        newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[0];\r\n        newNode.scale = 0.4;\r\n        newNode.position = new cc.Vec2(startPos.x , startPos.y - 345);\r\n        newNode.setContentSize(prefabWidth * (screenSize.width / gameBox.children[0].width) , prefabWidth * (screenSize.width / gameBox.children[0].width));\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            newNode.setContentSize(prefabWidth * this.screenScale , prefabWidth * this.screenScale);\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            newNode.setContentSize(prefabWidth, prefabWidth);\r\n        }\r\n\r\n        var onScale255 = function(node){\r\n            var fadeOutAction = cc.fadeTo(0.8 , 0).easing(cc.easeQuadraticActionOut());\r\n            fadeOutAction.setTag(2);\r\n            node.runAction(fadeOutAction);\r\n        }\r\n\r\n        var scaleUpAction = cc.scaleTo(1 , 1.5).easing(cc.easeQuadraticActionOut());\r\n        scaleUpAction.setTag(1);\r\n\r\n        onScale255(newNode);\r\n        \r\n        var callback = cc.callFunc(onScale255);\r\n\r\n        var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n        newNode.runAction(sequence);\r\n\r\n\r\n        // shine effect\r\n        for(var i = 0 ; i < 16 ; i++){\r\n            var newNode = new cc.Node();\r\n            effectScreen.addChild(newNode);\r\n            newNode.addComponent(cc.Sprite);\r\n            newNode.addComponent(cc.Animation);\r\n            var animation = newNode.getComponent(cc.Animation);\r\n            var clip = animation.defaultClip = this.effectsAnimation[0];\r\n            animation.addClip(clip);\r\n\r\n            var angle = Math.floor(Math.random() * 360);\r\n            var radian = angle * Math.PI / 180;\r\n\r\n            var moveX = prefabWidth / 2 * Math.cos(radian) * Math.random();\r\n            var moveY = prefabWidth / 2 * Math.sin(radian) * Math.random();\r\n\r\n            var x = (startPos.x + moveX);\r\n            var y = (startPos.y - 345 + moveY);\r\n\r\n            newNode.scale = 0.004 * (prefabWidth * (screenSize.width / gameBox.children[0].width));\r\n            newNode.position = new cc.Vec2(x , y);\r\n            newNode.setContentSize(prefabWidth * (screenSize.width / gameBox.children[0].width) , prefabWidth * (screenSize.width / gameBox.children[0].width));\r\n\r\n            if(gameBox.scale >= 0.8){\r\n                newNode.scale = 0.004 * prefabWidth * this.screenScale;\r\n            }\r\n            if(screenSize.width >= 1450){\r\n                newNode.scale = 0.004 * prefabWidth;\r\n            }\r\n            \r\n            var move = cc.moveTo(1 , new cc.Vec2(x + moveX , y + moveY)).easing(cc.easeQuadraticActionInOut());  // 여기가 문제같은데..\r\n            var rotate = cc.rotateTo(1 , 90).easing(cc.easeQuadraticActionInOut());\r\n            var scale = cc.scaleTo(1 , 0).easing(cc.easeQuadraticActionInOut());\r\n\r\n            newNode.runAction(move);\r\n            newNode.runAction(rotate);\r\n            newNode.runAction(scale);\r\n\r\n\r\n            // 재생\r\n            newNode.getComponent(cc.Animation).play(clip.name);\r\n        }\r\n    }\r\n\r\n    watermelonShine(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var shine = this.node.getChildByName(\"shine\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        shine.scale = 1 * (screenSize.width / gameBox.children[0].width)\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            shine.scale = 1 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            shine.scale = 1;\r\n        }\r\n\r\n        shine.active = true;\r\n\r\n        this.shineMove = true;\r\n        \r\n        this.watermelonShineRotate();\r\n        this.watermelonShineFadeInOut();\r\n    }\r\n\r\n    watermelonShineRotate(){\r\n        var shine = this.node.getChildByName(\"shine\");\r\n        var shine_1 = shine.getChildByName(\"1_1\");\r\n        var shine_2 = shine.getChildByName(\"1_2\");\r\n        \r\n        var shineRotate = function(){\r\n            var rotate1 = function(){\r\n                shineRotate();\r\n            }\r\n\r\n            var rotate_1 = cc.rotateBy(10 , 90).easing(cc.easeQuadraticActionInOut());\r\n    \r\n            var callback = cc.callFunc(rotate1);\r\n    \r\n            var sequence = cc.sequence(rotate_1 , callback);\r\n    \r\n            shine_1.runAction(sequence);\r\n        }\r\n\r\n        var shineRotate2 = function(){\r\n            var rotate2 = function(){\r\n                shineRotate2();\r\n            }\r\n\r\n            var rotate_1 = cc.rotateBy(10 , 90).easing(cc.easeQuadraticActionInOut());\r\n    \r\n            var callback = cc.callFunc(rotate2);\r\n    \r\n            var sequence = cc.sequence(rotate_1 , callback);\r\n    \r\n            shine_2.runAction(sequence);\r\n        }\r\n\r\n        shineRotate();\r\n        shineRotate2();\r\n    }\r\n\r\n    watermelonShineFadeInOut(){\r\n        var shine = this.node.getChildByName(\"shine\");\r\n        var shine_1 = shine.getChildByName(\"1_1\");\r\n        var shine_2 = shine.getChildByName(\"1_2\");\r\n\r\n        var shineFade = function(){\r\n            var fadeInOut = function(){\r\n                var fadeInOut2 = function(){\r\n                    shineFade();\r\n                }\r\n                var fadeIn = cc.fadeTo(1 , 255).easing(cc.easeQuadraticActionInOut());\r\n    \r\n                var callback = cc.callFunc(fadeInOut2);\r\n    \r\n                var sequence = cc.sequence(fadeIn , callback);\r\n    \r\n                shine_1.runAction(sequence);\r\n            }\r\n    \r\n            var fadeOut = cc.fadeTo(1 , 0).easing(cc.easeQuadraticActionInOut());\r\n    \r\n            var callback = cc.callFunc(fadeInOut);\r\n    \r\n            var sequence = cc.sequence(fadeOut , callback);\r\n    \r\n            shine_1.runAction(sequence);\r\n        }\r\n\r\n        var shineFade2 = function(){\r\n            var fadeInOut3 = function(){\r\n                var fadeInOut4 = function(){\r\n                    shineFade2();\r\n                }\r\n                var fadeOut = cc.fadeTo(1 , 0).easing(cc.easeQuadraticActionInOut());\r\n    \r\n                var callback = cc.callFunc(fadeInOut4);\r\n    \r\n                var sequence = cc.sequence(fadeOut , callback);\r\n    \r\n                shine_2.runAction(sequence);\r\n            }\r\n    \r\n            var fadeIn = cc.fadeTo(1 , 255).easing(cc.easeQuadraticActionInOut());\r\n    \r\n            var callback = cc.callFunc(fadeInOut3);\r\n    \r\n            var sequence = cc.sequence(fadeIn , callback);\r\n    \r\n            shine_2.runAction(sequence);\r\n        }\r\n\r\n        shineFade();\r\n        shineFade2();\r\n    }\r\n\r\n    warningSetting(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var warning = this.node.getChildByName(\"warning\");\r\n        warning.opacity = 0;\r\n\r\n        for(var i = 0 ; i < 4 ; i++){\r\n            var newNode = new cc.Node();\r\n            newNode.addComponent(cc.Sprite);\r\n            newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n            newNode.width = newNode.width * 0.5;\r\n            newNode.height = newNode.height * 0.5;\r\n\r\n            var numberW = Math.ceil(screenSize.width / newNode.width);\r\n            var numberH = Math.ceil(screenSize.height / newNode.height);\r\n            switch(i){\r\n                case 0: // 오른쪽\r\n                    for(var j = 0 ; j < numberH ; j++){\r\n                        for(var k = 0 ; k < 2 ; k++){\r\n                            if(k === 0){\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX((screenSize.width / 2 - newNode.width / 2));\r\n                                newNode.setPositionY(newNode.height / 2 + newNode.height * j);\r\n                            }else{\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX((screenSize.width / 2 - newNode.width / 2));\r\n                                newNode.setPositionY((newNode.height / 2 + newNode.height * j) * -1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1: // 왼쪽\r\n                    for(var j = 0 ; j < numberH ; j++){\r\n                        for(var k = 0 ; k < 2 ; k++){\r\n                            if(k === 0){\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.rotation = 180;\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX((screenSize.width / 2 - newNode.width / 2) * -1);\r\n                                newNode.setPositionY(newNode.height / 2 + newNode.height * j);\r\n                            }else{\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.rotation = 180;\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX((screenSize.width / 2 - newNode.width / 2) * -1);\r\n                                newNode.setPositionY((newNode.height / 2 + newNode.height * j) * -1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 2: // 아래쪽\r\n                    for(var j = 0 ; j < numberW ; j++){\r\n                        for(var k = 0 ; k < 2 ; k++){\r\n                            if(k === 0){\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.rotation = 90;\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX(newNode.height / 2 + newNode.height * j);\r\n                                newNode.setPositionY((screenSize.height / 2 - newNode.width / 2) * -1);\r\n                            }else{\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.rotation = 90;\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX((newNode.height / 2 + newNode.height * j) * -1);\r\n                                newNode.setPositionY((screenSize.height / 2 - newNode.width / 2) * -1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 3: // 위쪽\r\n                    for(var j = 0 ; j < numberW ; j++){\r\n                        for(var k = 0 ; k < 2 ; k++){\r\n                            if(k === 0){\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.rotation = 270;\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX(newNode.height / 2 + newNode.height * j);\r\n                                newNode.setPositionY(screenSize.height / 2 - newNode.width / 2);\r\n                            }else{\r\n                                var newNode = new cc.Node();\r\n                                warning.addChild(newNode);\r\n                                newNode.addComponent(cc.Sprite);\r\n                                newNode.getComponent(cc.Sprite).spriteFrame = this.effectsImage[7];\r\n                                newNode.rotation = 270;\r\n                                newNode.width = newNode.width * 0.5;\r\n                                newNode.height = newNode.height * 0.5;\r\n                                newNode.setPositionX((newNode.height / 2 + newNode.height * j) * -1);\r\n                                newNode.setPositionY(screenSize.height / 2 - newNode.width / 2);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var box_2 = gameBox.getChildByName(\"box_2\");\r\n        var warningLine = this.node.getChildByName(\"warningLine\");\r\n        var line = warningLine.getChildByName(\"line\");\r\n        line.opacity = 0;\r\n        line.width = screenSize.width + 300\r\n        var y = box_2.position.y * (screenSize.width / gameBox.children[0].width);\r\n        if(gameBox.scale >= 0.8){\r\n            y = box_2.position.y * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            y = box_2.position.y;\r\n        }\r\n        line.setPosition(new cc.Vec2(box_2.position.x , y));\r\n        line.scale = gameBox.scale;\r\n    }\r\n\r\n    public warning(selfNode: cc.Node){\r\n        var warning = this.node.getChildByName(\"warning\");\r\n        var self = this;\r\n\r\n        var onFadeOut = function(node){\r\n            var reCheck = function(){\r\n                if(selfNode.name !== \"\" || self.node.getChildByName(\"gameScreen\").children[0].getSiblingIndex() === selfNode.getSiblingIndex()){\r\n                    self.fadeWarning = false;\r\n                }\r\n            }\r\n            var fadeOutAction = cc.fadeTo(1 , 0).easing(cc.easeQuadraticActionInOut());\r\n\r\n            var callback = cc.callFunc(reCheck);\r\n\r\n            var sequence = cc.sequence(fadeOutAction , callback);\r\n\r\n            node.runAction(sequence);\r\n        }\r\n\r\n        var scaleUpAction = cc.fadeTo(1 , 185).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var callback = cc.callFunc(onFadeOut);\r\n\r\n        var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n        warning.runAction(sequence);\r\n\r\n        this.warningLine();\r\n    }\r\n\r\n    warningLine(){\r\n        var warningLine = this.node.getChildByName(\"warningLine\");\r\n        var line = warningLine.getChildByName(\"line\");\r\n\r\n        var onFadeOut2 = function(node){\r\n            var fadeOutAction = cc.fadeTo(1 , 0).easing(cc.easeQuadraticActionInOut());\r\n\r\n            node.runAction(fadeOutAction);\r\n        }\r\n\r\n        var scaleUpAction = cc.fadeTo(1 , 165).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var callback = cc.callFunc(onFadeOut2);\r\n\r\n        var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n        line.runAction(sequence);\r\n    }\r\n\r\n    public failed(){\r\n        if(this.isfail){\r\n            return;\r\n        }\r\n\r\n        this.isfail = true;\r\n        this.touchStop = true;\r\n\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n\r\n        // 모든 블럭 멈춤\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n        for(var i = 0 ; i < gameScreen.childrenCount ; i++){\r\n            gameScreen.children[i].getComponent(cc.RigidBody).type = cc.RigidBodyType.Static;\r\n        }\r\n        // 모든 효과 멈춤\r\n        var effectScreen = this.node.getChildByName(\"effectScreen\");\r\n        for(var i = 0 ; i < effectScreen.childrenCount ; i++){\r\n            var animation = effectScreen.children[i].getComponent(cc.Animation);\r\n            if(animation){\r\n                var clipName = \"smoke\";\r\n                animation.stop(clipName);\r\n            }\r\n        }\r\n\r\n        var fail = this.node.getChildByName(\"fail\");\r\n        fail.scale = 1.5 * (screenSize.width / gameBox.children[0].width);\r\n        fail.active = true;\r\n\r\n        var finishScale =  0.8 * (screenSize.width / gameBox.children[0].width);\r\n        if(gameBox.scale >= 0.8){\r\n            fail.scale = 1.5 * this.screenScale;\r\n            finishScale = 0.8 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            fail.scale = 1.5;\r\n            finishScale = 0.8;\r\n        }\r\n\r\n        this.scheduleOnce(function(){\r\n            var failFadeAction = cc.fadeTo(0.3, 255).easing(cc.easeQuadraticActionIn());\r\n            fail.runAction(failFadeAction);\r\n\r\n            var failScaleAction = cc.scaleTo(0.3 , finishScale).easing(cc.easeQuadraticActionIn());\r\n            fail.runAction(failScaleAction);\r\n\r\n            this.scheduleOnce(function(){\r\n                var failFadeAction = cc.fadeTo(0.5, 0).easing(cc.easeQuadraticActionInOut());\r\n                fail.runAction(failFadeAction);\r\n\r\n                this.endGame(false);\r\n            },1);\r\n            this.soundsData(3);\r\n        },1)\r\n        this.soundsData(5);\r\n    }\r\n    public success(){\r\n        var background = this.node.getChildByName(\"background\");\r\n        var mission = background.getChildByName(\"mission\");\r\n        var text = mission.getChildByName(\"text\");\r\n        var success = mission.getChildByName(\"success\");\r\n        var boxCollider_top = this.node.getChildByName(\"boxCollider_top\");\r\n        boxCollider_top.group = \"default\";\r\n\r\n        this.touchStop = true;\r\n        text.active = false;\r\n        success.active = true;\r\n\r\n        success.getComponent(cc.Animation).play(\"success\");\r\n\r\n        this.watermelonShine();\r\n\r\n        this.soundsData(6);\r\n\r\n        this.scheduleOnce(function(){\r\n            this.perfectText();\r\n\r\n            this.soundsData(4);\r\n        },0.5);\r\n    }\r\n\r\n    perfectText(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var perfectText = this.node.getChildByName(\"perfectText\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var self = this;\r\n\r\n        perfectText.scale = 1.5 * (screenSize.width / gameBox.children[0].width);\r\n        perfectText.setPositionY(150 * (screenSize.width / gameBox.children[0].width));\r\n\r\n        var perfectTextScale = 1 * (screenSize.width / gameBox.children[0].width);\r\n        if(gameBox.scale >= 0.8){\r\n            perfectText.scale = 1.5 * this.screenScale;\r\n            perfectTextScale = 1 * this.screenScale;\r\n            perfectText.setPositionY(150 * this.screenScale);\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            perfectText.scale = 1.5;\r\n            perfectTextScale = 1;\r\n            perfectText.setPositionY(150);\r\n        }\r\n\r\n        var onFadeOut2 = function(){\r\n            self.scheduleOnce(function(){\r\n                var fadeOutAction = cc.fadeTo(0.5 , 0).easing(cc.easeQuadraticActionInOut());\r\n\r\n                perfectText.runAction(fadeOutAction);\r\n\r\n                self.endGame(true);\r\n            } , 1)\r\n        }\r\n\r\n        var fadeInAction = cc.fadeTo(0.3 , 255).easing(cc.easeQuadraticActionIn());\r\n\r\n        perfectText.runAction(fadeInAction);\r\n\r\n        var scaleDownAction = cc.scaleTo(0.5 , 1).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var callback = cc.callFunc(onFadeOut2);\r\n\r\n        var sequence = cc.sequence(scaleDownAction, callback);\r\n\r\n        perfectText.runAction(sequence);\r\n    }\r\n\r\n    startScreen(){\r\n        // 현재 화면 크기\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        var startScreen = this.node.getChildByName(\"startScreen\");\r\n        var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var arrow = startScreen.getChildByName(\"arrow\");\r\n        var mouseCursor = startScreen.getChildByName(\"mouseCursor\");\r\n        var tapToSwipe = startScreen.getChildByName(\"tapToSwipe\");\r\n        var copyball = cc.instantiate(gameScreen.children[0]);\r\n        copyball.getComponent(cc.RigidBody).type = cc.RigidBodyType.Static;\r\n        copyball.group = \"default\";\r\n        copyball.setPositionX(140 * (screenSize.width / gameBox.children[0].width))\r\n        startScreen.addChild(copyball);\r\n        gameScreen.children[0].opacity = 0;\r\n        \r\n\r\n        arrow.scale = 1 * (screenSize.width / gameBox.children[0].width);\r\n        arrow.setPosition(0 , 245 * (screenSize.width / gameBox.children[0].width));\r\n\r\n        mouseCursor.scale = 0.5 * (screenSize.width / gameBox.children[0].width);\r\n        mouseCursor.setPosition(140 * (screenSize.width / gameBox.children[0].width) , 245 * (screenSize.width / gameBox.children[0].width));\r\n\r\n        tapToSwipe.scale = 1 * (screenSize.width / gameBox.children[0].width);\r\n        tapToSwipe.setPosition(0 , 380 * (screenSize.width / gameBox.children[0].width));\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            arrow.scale = 1 * this.screenScale;\r\n            arrow.setPosition(0 , 245 * this.screenScale);\r\n            mouseCursor.scale = 0.5 * this.screenScale;\r\n            mouseCursor.setPosition(140 * this.screenScale,245 * this.screenScale);\r\n            tapToSwipe.scale = 1 * this.screenScale;\r\n            tapToSwipe.setPosition(0 , 380 * this.screenScale);\r\n            copyball.setPositionX(140 * this.screenScale);\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            arrow.scale = 1;\r\n            arrow.setPosition(0 , 245);\r\n            mouseCursor.scale = 0.5;\r\n            mouseCursor.setPosition(140 * this.screenScale,245);\r\n            tapToSwipe.scale = 1;\r\n            tapToSwipe.setPosition(0 , 380);\r\n            copyball.setPositionX(140);\r\n        }\r\n\r\n        // 배경 색상 지정\r\n        startScreen.getComponent(cc.Graphics).fillColor = new cc.Color(0 , 0 , 0 , 185);\r\n        startScreen.getComponent(cc.Graphics).fillRect(screenSize.width / 2 * -1 , (screenSize.height / 2 - 345) * -1 , screenSize.width , screenSize.height);\r\n        this.mouseCursor();\r\n        this.startScreenBall(copyball);\r\n        this.startLineDraw();\r\n    }\r\n\r\n    mouseCursor(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        \r\n        var startScreen = this.node.getChildByName(\"startScreen\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var mouseCursor = startScreen.getChildByName(\"mouseCursor\");\r\n        var self = this;\r\n\r\n        var mouseMovePosX = 280 * (screenSize.width / gameBox.children[0].width);\r\n        if(gameBox.scale >= 0.8){\r\n            mouseMovePosX = 280 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            mouseMovePosX = 280;\r\n        }\r\n\r\n        var onFadeOut = function(node){\r\n            var reCheck = function(){\r\n                self.mouseCursor();\r\n            }\r\n            var moveAction_2 = cc.moveBy(2 , new cc.Vec2(mouseMovePosX , 0)).easing(cc.easeQuadraticActionInOut());\r\n\r\n            var callback = cc.callFunc(reCheck);\r\n\r\n            var sequence = cc.sequence(moveAction_2 , callback);\r\n\r\n            node.runAction(sequence);\r\n        }\r\n\r\n        var moveAction_1 = cc.moveBy(2 , new cc.Vec2(mouseMovePosX * -1 , 0)).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var callback = cc.callFunc(onFadeOut);\r\n\r\n        var sequence = cc.sequence(moveAction_1, callback);\r\n\r\n        mouseCursor.runAction(sequence);\r\n    }\r\n\r\n    startScreenBall(copyball:cc.Node){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        \r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var self = this;\r\n\r\n        var mouseMovePosX = 280 * (screenSize.width / gameBox.children[0].width);\r\n        if(gameBox.scale >= 0.8){\r\n            mouseMovePosX = 280 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            mouseMovePosX = 280;\r\n        }\r\n\r\n        var onFadeOut = function(node){\r\n            var reCheck = function(){\r\n                self.startScreenBall(copyball);\r\n            }\r\n            var moveAction_2 = cc.moveBy(2 , new cc.Vec2(mouseMovePosX , 0)).easing(cc.easeQuadraticActionInOut());\r\n\r\n            var callback = cc.callFunc(reCheck);\r\n\r\n            var sequence = cc.sequence(moveAction_2 , callback);\r\n\r\n            node.runAction(sequence);\r\n        }\r\n\r\n        var moveAction_1 = cc.moveBy(2 , new cc.Vec2(mouseMovePosX * -1 , 0)).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var callback = cc.callFunc(onFadeOut);\r\n\r\n        var sequence = cc.sequence(moveAction_1, callback);\r\n\r\n        copyball.runAction(sequence);\r\n    }\r\n\r\n    startLineDraw(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        var startScreen = this.node.getChildByName(\"startScreen\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var line = startScreen.getChildByName(\"line\");\r\n        var graphics = line.getComponent(cc.Graphics);\r\n        \r\n        graphics.lineWidth = 4 * (screenSize.width / gameBox.children[0].width);\r\n        graphics.strokeColor = cc.color(255,255,255,255);\r\n\r\n        var startX = 280 * (screenSize.width / gameBox.children[0].width);\r\n        var startY = 750 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        var endY = 250 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        // 간격과 선의 길이\r\n        var gapLength = 5 * (screenSize.width / gameBox.children[0].width);  // 각 점 사이의 간격\r\n        var dashLength = 10 * (screenSize.width / gameBox.children[0].width); // 각 점의 길이\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            graphics.lineWidth = 4 * this.screenScale;\r\n            startX = 280 * this.screenScale;\r\n            startY = 750 * this.screenScale;\r\n            endY = 250 * this.screenScale;\r\n            gapLength = 5 * this.screenScale;\r\n            dashLength = 10 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            graphics.lineWidth = 4;\r\n            startX = 280;\r\n            startY = 750;\r\n            endY = 250;\r\n            gapLength = 5;\r\n            dashLength = 10;\r\n        }\r\n\r\n        // 점선 그리기\r\n        var currentPosition = startY;\r\n\r\n        while (currentPosition >= endY) {\r\n            graphics.moveTo(startX / 2, currentPosition);\r\n            currentPosition -= gapLength;\r\n            graphics.lineTo(startX / 2, currentPosition);\r\n            currentPosition -= dashLength;\r\n        }\r\n        graphics.stroke();\r\n\r\n        var self = this;\r\n\r\n        var moveLeftAction = cc.moveBy(2, new cc.Vec2(-startX, 0)).easing(cc.easeQuadraticActionInOut());\r\n        var moveRightAction = cc.moveBy(2, new cc.Vec2(startX, 0)).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var resetAction = cc.callFunc(() => {\r\n            // 애니메이션이 끝난 후 추가 작업 수행\r\n            var resetAction2 = cc.callFunc(() => {\r\n                self.startLineDraw();\r\n            })\r\n            line.runAction(cc.sequence(moveRightAction, resetAction2));\r\n            drawDashedLine(graphics, startX, startY, endY, gapLength, dashLength);\r\n        });\r\n\r\n        line.runAction(cc.sequence(moveLeftAction, resetAction));\r\n\r\n        // 점선 그리기 함수\r\n        function drawDashedLine(graphics, startX, startY, endY, gapLength, dashLength) {\r\n            var currentPosition2 = startX;   \r\n\r\n            while (currentPosition >= endY) {\r\n                graphics.moveTo(currentPosition2, startY);\r\n                currentPosition2 -= gapLength;\r\n                graphics.lineTo(currentPosition2, startY);\r\n                currentPosition2 -= dashLength;\r\n            }\r\n            graphics.stroke();\r\n        }\r\n    }\r\n\r\n    endGame(failOrSuccess:boolean){\r\n        this.endScreen();\r\n        this.logoEffect();\r\n        this.scheduleOnce(function(){\r\n            this.buttonEffect(failOrSuccess);\r\n        } , 0.3);\r\n        this.endBlackscreen= true;\r\n    }\r\n\r\n    endScreen(){\r\n        // 현재 화면 크기\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        var endScreen = this.node.getChildByName(\"endScreen\");\r\n\r\n        // 배경 색상 지정\r\n        endScreen.getComponent(cc.Graphics).fillColor = new cc.Color(0 , 0 , 0 , 0);\r\n        endScreen.getComponent(cc.Graphics).fillRect(screenSize.width / 2 * -1 , (screenSize.height / 2 - 345) * -1 , screenSize.width , screenSize.height);\r\n    }\r\n    buttonEffect(failOrSuccess:boolean){\r\n\r\n        var screenSize = cc.view.getVisibleSize();\r\n\r\n        var endScreen = this.node.getChildByName(\"endScreen\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var button = endScreen.getChildByName(\"button\");\r\n        var self = this;\r\n\r\n\r\n        button.on(cc.Node.EventType.TOUCH_START , this.onButtonStart , this);\r\n        button.on(cc.Node.EventType.TOUCH_END , this.onButtonEnd , this);\r\n\r\n\r\n        if(failOrSuccess){\r\n            button.getComponent(cc.Sprite).spriteFrame = this.effectsImage[8];\r\n        }else{\r\n            button.getComponent(cc.Sprite).spriteFrame = this.effectsImage[9];\r\n        }\r\n\r\n        button.y = 100 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        var sclae_1 =  1.6 * (screenSize.width / gameBox.children[0].width);\r\n        var sclae_2 =  1.5 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            button.y = 100 * this.screenScale;\r\n            sclae_1 = 1.6 * this.screenScale;\r\n            sclae_2 = 1.5 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            button.y = 100;\r\n            sclae_1 = 1.6;\r\n            sclae_2 = 1.5;\r\n        }\r\n\r\n        var onFadeOut2 = function(node){\r\n            var scaleUpAction2 = cc.scaleTo(0.05 , sclae_2).easing(cc.easeQuadraticActionInOut());\r\n            node.runAction(scaleUpAction2);\r\n\r\n            self.onAdsFinished();\r\n        }\r\n\r\n        var scaleUpAction = cc.scaleTo(0.25 , sclae_1).easing(cc.easeQuadraticActionInOut());\r\n        \r\n        var callback = cc.callFunc(onFadeOut2);\r\n\r\n        var sequence = cc.sequence(scaleUpAction, callback);\r\n\r\n        button.runAction(sequence);\r\n    }\r\n    logoEffect(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        \r\n        var endScreen =this.node.getChildByName(\"endScreen\");\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var logo = endScreen.getChildByName(\"logo\");\r\n        var animation = logo.getComponent(cc.Animation);\r\n        var clip = animation.defaultClip;\r\n\r\n        var logoScale = 1 * (screenSize.width / gameBox.children[0].width);\r\n        var x = 0 * (screenSize.width / gameBox.children[0].width);\r\n        var y = 550 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            x = 0\r\n            y = 550 * this.screenScale;\r\n            logoScale = 1 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            x = 0\r\n            y = 550;\r\n            logoScale = 1;\r\n        }\r\n\r\n        clip.curveData.props.scale[0].value = new cc.Vec2(logoScale , logoScale);\r\n        logo.setPosition(x,y);\r\n\r\n        animation.play(clip.name)\r\n    }\r\n\r\n    soundsData(code:number){\r\n        var soundEffect = this.node.getChildByName(\"soundEffect\");\r\n\r\n        // 새로운 오디오 소스 컴포넌트를 생성합니다.\r\n        var newSoundEffectSrc = soundEffect.addComponent(cc.AudioSource);\r\n        newSoundEffectSrc.volume = 0.5;  // 사운드 조절\r\n\r\n        // 새로운 오디오 소스에 소리를 설정합니다.\r\n        newSoundEffectSrc.clip = this.sounds[code];\r\n        // if(code === 4 || code === 5){\r\n        //     newSoundEffectSrc.volume = 0.4;\r\n        // }\r\n\r\n        // 새로운 오디오 소스를 재생합니다.\r\n        newSoundEffectSrc.play();\r\n    }\r\n\r\n    onButtonStart(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var endScreen = this.node.getChildByName(\"endScreen\");\r\n        var button = endScreen.getChildByName(\"button\");\r\n\r\n        var sclae_1 =  1.5 * (screenSize.width / gameBox.children[0].width);\r\n        var sclae_2 =  1.35 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            sclae_1 = 1.5 * this.screenScale;\r\n            sclae_2 = 1.35 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            sclae_1 = 1.5;\r\n            sclae_2 = 1.35;\r\n        }\r\n\r\n        var scaleAction = cc.scaleTo(0.1 , sclae_2);\r\n        button.runAction(scaleAction);\r\n    }\r\n\r\n    onButtonEnd(){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var gameBox = this.node.getChildByName(\"gameBox\");\r\n        var endScreen = this.node.getChildByName(\"endScreen\");\r\n        var button = endScreen.getChildByName(\"button\");\r\n\r\n        var sclae_1 =  1.5 * (screenSize.width / gameBox.children[0].width);\r\n        var sclae_2 =  1.35 * (screenSize.width / gameBox.children[0].width);\r\n\r\n        if(gameBox.scale >= 0.8){\r\n            sclae_1 = 1.5 * this.screenScale;\r\n            sclae_2 = 1.35 * this.screenScale;\r\n        }\r\n        if(screenSize.width >= 1450){\r\n            sclae_1 = 1.5;\r\n            sclae_2 = 1.35;\r\n        }\r\n\r\n        var scaleAction = cc.scaleTo(0.1 , sclae_1);\r\n        button.runAction(scaleAction);\r\n\r\n        this.oneLink();\r\n        this.clickUrl();\r\n    }\r\n\r\n    snow(plusX:number , plusY:number){\r\n        var screenSize = cc.view.getVisibleSize();\r\n        var background = this.node.getChildByName(\"background\");\r\n        var snow = background.getChildByName(\"snow\");\r\n\r\n        var random = Math.floor(Math.random() * 9);\r\n        do {\r\n            random = Math.floor(Math.random() * 9);\r\n        } while (random === 0 || random === 1 || random === 2 || random === 3 || random === 4);\r\n\r\n        var newNode = new cc.Node();\r\n        newNode.scale = random * 0.1;\r\n        newNode.addComponent(cc.Sprite).spriteFrame = this.effectsImage[12];\r\n\r\n        newNode.setPosition(screenSize.width / 2  - screenSize.width / 2 / 2 + plusX , screenSize.height / 2 + newNode.height / 2 + plusY);\r\n\r\n        snow.addChild(newNode);\r\n        \r\n        var snowMove = function(){\r\n            var onFadeOut = function(){\r\n                newNode.setPosition(screenSize.width / 2  - screenSize.width / 2 / 2 + plusX , screenSize.height / 2 + newNode.height / 2 + plusY);\r\n                snowMove();\r\n                console.log(newNode.position)\r\n            }\r\n\r\n            // var random = Math.floor(Math.random() * 6);\r\n            // do {\r\n            //     random = Math.floor(Math.random() * 6);\r\n            // } while (random === 0 || random === 1 || random === 2);\r\n\r\n            var moveAction_1 = cc.moveBy(4 , new cc.Vec2((screenSize.width / 2) * -1 , (screenSize.height + plusY) * -1));\r\n            \r\n            var callback = cc.callFunc(onFadeOut);\r\n\r\n            var sequence = cc.sequence(moveAction_1, callback);\r\n\r\n            newNode.runAction(sequence);\r\n        }\r\n\r\n        snowMove();\r\n    }\r\n\r\n\r\n\r\n    oneLink(){\r\n        // cc.sys.openURL(\"https://wmg.onelink.me/YdiR/AdPlayable\");\r\n    }\r\n\r\n    // 화면 클릭 시 설치화면으로 이동\r\n    clickUrl(){\r\n        // Facebook\r\n        // window.FbPlayableAd.onCTAClick();\r\n\r\n        // Vungle\r\n        // window.parent.postMessage(\"download\", '*');\r\n\r\n        // Open Onelink\r\n        // window.open(\"https://dropmerge.onelink.me/6I25/DM2\", \"_blank\");\r\n\r\n        // Applovin or Unity Ads\r\n        // if (cc.sys.os == cc.sys.OS_IOS) { //assuming this is 1 of Android, 0 if iOS\r\n        //     mraid.open(\"https://play.google.com/store/apps/details?id=com.superbox.aos.suikagame\");\r\n        // }\r\n        // else {\r\n        //     mraid.open(\"https://play.google.com/store/apps/details?id=com.superbox.aos.suikagame\");\r\n        // }\r\n\r\n        // Google Ads\r\n        // window.ExitApi.exit();\r\n\r\n        // Ironsrc\r\n        // dapi.openStoreUrl();\r\n\r\n        // Tiktok\r\n        window.playableSDK.openAppStore();\r\n    }\r\n\r\n    // Ads Finish\r\n    onAdsFinished() { // 게임 끝날 때\r\n\r\n        // Vungle\r\n        // window.parent.postMessage(\"complete\", '*');\r\n\r\n        // Open Onelink\r\n        // window.open(\"https://dropmerge.onelink.me/6I25/DM2\", \"_blank\");\r\n\r\n        // Applovin\r\n        // if(cc.sys.os == cc.sys.OS_IOS) {\r\n        //     mraid.open(\"https://play.google.com/store/apps/details?id=com.superbox.aos.suikagame\")\r\n        // }\r\n        // else{\r\n        //     mraid.open(\"https://play.google.com/store/apps/details?id=com.superbox.aos.suikagame\");\r\n        // }\r\n\r\n        // Ironsrc\r\n        // dapi.openStoreUrl();\r\n\r\n        // Tiktok\r\n        window.playableSDK.openAppStore();\r\n    }\r\n\r\n    update (dt) {\r\n        if(this.endBlackscreen){\r\n            var endScreen = this.node.getChildByName(\"endScreen\");\r\n            var endScreenFillColor = endScreen.getComponent(cc.Graphics).fillColor;\r\n\r\n            if(endScreenFillColor.getA() < 180){\r\n                endScreen.getComponent(cc.Graphics).clear();\r\n                endScreenFillColor.setA(endScreenFillColor.getA() + 400 *dt);\r\n    \r\n                endScreenFillColor = endScreenFillColor;\r\n                endScreen.getComponent(cc.Graphics).fillRect(-1920, -1920, 1920*2, 1920*2);\r\n            }else{\r\n                this.endBlackscreen = false;\r\n            }\r\n        }\r\n\r\n\r\n        if(this.shineMove){\r\n            var shine = this.node.getChildByName(\"shine\");\r\n            var gameScreen = this.node.getChildByName(\"gameScreen\");\r\n\r\n            var watermelonNode = null;\r\n            for(var i = 0 ; i < gameScreen.childrenCount ; i++){\r\n                if(gameScreen.children[i].getComponent(cc.Sprite).spriteFrame.name === \"10\"){\r\n                    watermelonNode = gameScreen.children[i];\r\n                }\r\n            }\r\n            shine.setPosition(watermelonNode.getPositionX() , watermelonNode.getPositionY() - 345);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/","file":"project.js"}